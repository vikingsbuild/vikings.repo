# encoded by Apollo
# https://deus-apollo.ml
#checkintegrity
import base64, codecs
magic = '# -*- coding: utf-8 -*-
import urllib
import urllib2
import datetime
import re
import os
import base64
import codecs
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import cookielib
import time
import xbmcgui
import xbmc
import xbmcplugin
import webbrowser
import os
import xbmcaddon
from BeautifulSoup import BeautifulStoneSoup , BeautifulSoup , BeautifulSOAP
if 64 - 64: i11iIiiIii
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
o0OO00 = None
try :
 from xml . sax . saxutils import escape
except : traceback . print_exc ( )
if 78 - 78: i11i . oOooOoO0Oo0O
try :
 import json
except :
 import simplejson as json
import SimpleDownloader as downloader
import time
import requests
iI1 = False
if 43 - 43: I11i11Ii
if 65 - 65: i1iIi11iIIi1I
Oo = "29.08.20"
if 2 - 2: o0 * i1 * ii1IiI1i % OOooOOo / I11i / Ii1I
if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * o00O0oo
if 97 - 97: Ii1I - ii1IiI1i . I1Ii111 - OoooooooOO
oO0o = 'aHR0cHM6Ly9kZXVzYXBvbGxvLmNvbS9BUE9MTE8vQkFTRS1QUklOQ0lQQUwvQmFzZS1QcmluY2lwYWwuaHRtbA=='
IIII = base64 . b64decode ( oO0o )
if 59 - 59: i1IIi * i1IIi % I11i + i11i
if 32 - 32: o0 . o00O0oo * i1IIi . ooOoO0o / I1Ii111
o00 = '[COLOR orange][B]->[/COLOR][/B][COLOR deepskyblue][B] BEM-VINDOS[/COLOR][/B]'
if 62 - 62: i11iIiiIii - i11i % ooOoO0o - iIii1I11I1II1 . ii1IiI1i . i11i
if 61 - 61: OOooOOo / o0 / IiII * i1iIi11iIIi1I . i11i
if 1 - 1: i11i - ii1IiI1i % i11iIiiIii + I1Ii111 . ooOoO0o
Oooo0000 = '-> BAIXE E INSTALE!'
if 22 - 22: iII111i . I1Ii111
if 41 - 41: ooOoO0o . o00O0oo * I1Ii111 % i11iIiiIii
if 74 - 74: IiII * I1Ii111
if 82 - 82: iIii1I11I1II1 % I1Ii111
oOo0oooo00o = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3LzJQTk4xUGpL'
oO0o0o0ooO0oO = base64 . b64decode ( oOo0oooo00o )
if 52 - 52: i11i - i11iIiiIii % ooOoO0o
if 54 - 54: I11i % O0 + oOooOoO0Oo0O - IiII / Ii1I
if 31 - 31: i1iIi11iIIi1I + i11i
if 13 - 13: I11i * OOooOOo * oOooOoO0Oo0O
if 55 - 55: i11i
IIIiI11ii = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3BYR2gyckVu'
O000oo = base64 . b64decode ( IIIiI11ii )
if 3 - 3: IiII + O0
if 42 - 42: I11i / i1IIi + i11iIiiIii - iII111i
if 78 - 78: i1iIi11iIIi1I
Iii1I111 = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L1hDdDl6clRm'
OO0O0O00OooO = base64 . b64decode ( Iii1I111 )
if 77 - 77: i11i - i11i . oOooOoO0Oo0O / i1
if 14 - 14: Ii1I % O0
IiI1I1 = 3000
if 86 - 86: i11iIiiIii + iII111i + o00O0oo * Ii1I + i1
if 61 - 61: i1iIi11iIIi1I / i11iIiiIii
if 34 - 34: OoooooooOO + iIii1I11I1II1 + i11iIiiIii - ii1IiI1i + i11iIiiIii
if 65 - 65: o0
if 6 - 6: oOooOoO0Oo0O / I11i11Ii % iII111i
oo = 'aHR0cHM6Ly91cmxwbGF5LmNvbS9OMHJkTEI='
OO0O00 = base64 . b64decode ( oo )
if 20 - 20: OoooooooOO
if 13 - 13: i1IIi - iII111i % OOooOOo / iIii1I11I1II1 % IiII
if 97 - 97: i11iIiiIii
if 32 - 32: I11i11Ii * O0 % OOooOOo % iII111i . I1Ii111
o0OOOOO00o0O0 = 'ǭq�{���}���w���'
if 71 - 71: o00O0oo % IiII / i1
if 49 - 49: i11i % IiII * O0
if 89 - 89: OOooOOo + I11i11Ii
Ii1IOo0o0 = 'TORRENT'
III1ii1iII = 'https://i.imgur.com/67UUio3.png'
oo0oooooO0 = 'https://i.imgur.com/Y4QXRab.jpg'
if 19 - 19: Ii1I + o00O0oo
ooo = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0JVYk5CWlFB'
ii1I1i1I = base64 . b64decode ( ooo )
if 88 - 88: i1iIi11iIIi1I + O0 / o0 * IiII
iiiIi1i1I = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0JVYk5CWlFB'
oOO00oOO = base64 . b64decode ( iiiIi1i1I )
if 75 - 75: i1IIi / OoooooooOO - O0 / o0 . i11i - i1IIi
if 71 - 71: I11i + iII111i * I11i - i1iIi11iIIi1I * i1
if 65 - 65: O0 % oOooOoO0Oo0O . ii1IiI1i % iIii1I11I1II1 / I11i % ooOoO0o
if 51 - 51: i11iIiiIii . oOooOoO0Oo0O + i11i
II111ii1II1i = '[COLOR white]Selecione um item:[/COLOR]'
if 59 - 59: O0 + oOooOoO0Oo0O + I1Ii111 % oOooOoO0Oo0O
o0OOoo0OO0OOO = '[COLOR white]!!Download em execução!![/COLOR]'
iI1iI1I1i1I = '!!Download [COLOR seablue]Audio!![/COLOR]'
if 24 - 24: ii1IiI1i
o0Oo0O0Oo00oO = '[COLOR deepskyblue][B] CHECAR POR ATUALIZAÇÃO[/COLOR][/B]'
I11i1I1I = 'https://i.imgur.com/22LSvnr.png'
oO0Oo = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L2E5dE1DMEh1'
oOOoo0Oo = base64 . b64decode ( oO0Oo )
if 78 - 78: Ii1I
if 71 - 71: I11i + o00O0oo % i11iIiiIii + ii1IiI1i - I1Ii111
if 88 - 88: o0 - i1iIi11iIIi1I % I11i
iI1I111Ii111i = 'BEM-VINDOS'
I11IiI1I11i1i = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3F0NmhqV0VY'
iI1ii1Ii = 'https://i.imgur.com/fHRcl7O.png'
oooo000 = 'https://i.imgur.com/Y4QXRab.jpg'
iIIIi1 = base64 . b64decode ( I11IiI1I11i1i )
if 20 - 20: i1IIi + ii1IiI1i - o00O0oo
if 30 - 30: i11i - I11i - i11iIiiIii % o0 - i11i * iII111i
if 61 - 61: OOooOOo - Ii1I % I11i
OOoOO0oo0ooO = '$texto='
if 98 - 98: IiII * IiII / IiII + Ii1I
if 34 - 34: o00O0oo
__addon__ = xbmcaddon . Addon ( )
__addonname__ = __addon__ . getAddonInfo ( 'name' )
__icon__ = __addon__ . getAddonInfo ( 'icon' )
if 15 - 15: Ii1I * o00O0oo * I11i11Ii % i11iIiiIii % o0 - I11i
if 68 - 68: ooOoO0o % i1IIi . I1Ii111 . ii1IiI1i
o0oo0oOo = [ '180upload.com' , 'allmyvideos.net' , 'bestreams.net' , 'clicknupload.com' , 'cloudzilla.to' , 'movshare.net' , 'novamov.com' , 'nowvideo.sx' , 'videoweed.es' , 'daclips.in' , 'datemule.com' , 'fastvideo.in' , 'faststream.in' , 'filehoot.com' , 'filenuke.com' , 'sharesix.com' , 'docs.google.com' , 'plus.google.com' , 'picasaweb.google.com' , 'gorillavid.com' , 'gorillavid.in' , 'grifthost.com' , 'hugefiles.net' , 'ipithos.to' , 'ishared.eu' , 'kingfiles.net' , 'mail.ru' , 'my.mail.ru' , 'videoapi.my.mail.ru' , 'mightyupload.com' , 'mooshare.biz' , 'movdivx.com' , 'movpod.net' , 'movpod.in' , 'movreel.com' , 'mrfile.me' , 'nosvideo.com' , 'openload.io' , 'played.to' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'primeshare.tv' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'sharerepo.com' , 'stagevu.com' , 'streamcloud.eu' , 'streamin.to' , 'thefile.me' , 'thevideo.me' , 'tusfiles.net' , 'uploadc.com' , 'zalaa.com' , 'uploadrocket.net' , 'uptobox.com' , 'v-vids.com' , 'veehd.com' , 'vidbull.com' , 'videomega.tv' , 'vidplay.net' , 'vidspot.net' , 'vidto.me' , 'vidzi.tv' , 'vimeo.com' , 'vk.com' , 'vodlocker.com' , 'xfileload.com' , 'xvidstage.com' , 'zettahost.tv' ]
o000O0o = [ 'plugin.video.dramasonline' , 'plugin.video.f4mTester' , 'plugin.video.shahidmbcnet' , 'plugin.video.SportsDevil' , 'plugin.stream.vaughnlive.tv' , 'plugin.video.ZemTV-shani' ]
if 42 - 42: o0
class II ( urllib2 . HTTPErrorProcessor ) :
 def http_response ( self , request , response ) :
  return response
 https_response = http_response
 if 45 - 45: O0 * i1 % I11i11Ii * OoooooooOO + IiII . o0
Oo0ooOo0o = False ;
if Oo0ooOo0o :
 if 22 - 22: iIii1I11I1II1 / i11iIiiIii * iIii1I11I1II1 * i11i . I11i / i11iIiiIii
 if 2 - 2: oOooOoO0Oo0O / O0 / i1 % o0 % iII111i
 try :
  import pysrc . pydevd as pydevd
  if 52 - 52: i1
  pydevd . settrace ( 'localhost' , stdoutToServer = True , stderrToServer = True )
 except ImportError :
  sys . stderr . write ( "Error: " +
 "You must add org.python.pydev.debug.pysrc to your PYTHONPATH." )
  sys . exit ( 1 )
  if 95 - 95: iII111i
  if 87 - 87: o00O0oo + o0 . I11i + o0
oO = xbmcaddon . Addon ( )
iIi1IIIi1 = oO . getAddonInfo ( 'version' )
O0oOoOOOoOO = xbmc . translatePath ( oO . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
ii1ii11IIIiiI = xbmc . translatePath ( oO . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
O00OOOoOoo0O = os . path . join ( O0oOoOOOoOO , 'favorites' )
O000OOo00oo = os . path . join ( O0oOoOOOoOO , 'history' )
if 71 - 71: i11iIiiIii + I1Ii111
oOo = os . path . join ( O0oOoOOOoOO , 'list_revision' )
oOO00Oo = os . path . join ( ii1ii11IIIiiI , 'icon.png' )
i1iIIIi1i = os . path . join ( ii1ii11IIIiiI , 'icon_config.png' )
iI1iIIiiii = os . path . join ( ii1ii11IIIiiI , 'favorites.png' )
i1iI11i1ii11 = os . path . join ( ii1ii11IIIiiI , 'fanart.jpg' )
OOooo0O00o = os . path . join ( O0oOoOOOoOO , 'source_file' )
oOOoOooOo = O0oOoOOOoOO
if 51 - 51: Ii1I + IiII % iIii1I11I1II1 / OOooOOo / I11i % OoooooooOO
downloader = downloader . SimpleDownloader ( )
o0O0OOO0Ooo = oO . getSetting ( 'debug' )
if os . path . exists ( O00OOOoOoo0O ) == True :
 iiIiI = open ( O00OOOoOoo0O ) . read ( )
else : iiIiI = [ ]
if os . path . exists ( OOooo0O00o ) == True :
 I1 = open ( OOooo0O00o ) . read ( )
else : I1 = [ ]
if 86 - 86: o0 - iII111i - i1iIi11iIIi1I * IiII
if 66 - 66: OoooooooOO + O0
def I1IiiI ( url ) :
 try :
  import urllib . request as urllib2
 except ImportError :
  import urllib2
 IIi = urllib2 . build_opener ( )
 IIi . addheaders = [ ( 'User-Agent' , 'Mozilla/5.0' ) ]
 if 41 - 41: iII111i - O0 - O0
 oO00OOoO00 = IIi . open ( url )
 IiI111111IIII = oO00OOoO00 . read ( ) . decode ( 'utf-8' )
 i1Ii = IiI111111IIII
 return i1Ii
 if 14 - 14: IiII
def I1iI1iIi111i ( string ) :
 if o0O0OOO0Ooo == 'true' :
  if 44 - 44: i1IIi % i11i + Ii1I
  xbmc . log ( "[APOLLO-%s]: %s" % ( iIi1IIIi1 , string ) )
  if 45 - 45: IiII / IiII + ooOoO0o + o00O0oo
  if 47 - 47: i1 + o00O0oo
  if 82 - 82: i11i . I1Ii111 - iIii1I11I1II1 - I1Ii111 * i11i
  if 77 - 77: iIii1I11I1II1 * i1iIi11iIIi1I
def oOooOo0 ( msg ) :
 i1I1ii11i1Iii = oO . getSetting ( 'suporte' )
 if i1I1ii11i1Iii == 'true' :
  I1IiiiiI ( Oooo0000 , OO0O00 , 44 , III1ii1iII , i1iI11i1ii11 , o0O ( O000oo ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if 2 - 2: iIii1I11I1II1 / OOooOOo + i1iIi11iIIi1I / I11i
def IIOOOO0oo0 ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[COLOR deepskyblue][B]"IMPORTANTE INSTALE" [/COLOR][/B]' , "[COLOR orange][B]PARA VOCÊ ASSISTIR OS EM TODOS OS SERVIDORES DE FILMES E SÉRIES, MUITO SIMPLES VCS DEVEM FAZER O DOWNLOAD DO PLUGIN ELEMENTUM NOS LINKS ASEGUIR!. LOGO APOIS TER FEITO O DOWNLOAD VC VÃO EM SITESMA INSTALA POR ZIP E PROCURAR NA PASTA DA SUA BOX OU PC O ZIP PARA INSTALAR NA BOX![/COLOR][/B]" )
 I11iiI1i1 = xbmcgui . Dialog ( )
 I1i1Iiiii = I11iiI1i1 . select ( '[COLOR orange][B]PARA ASSISTIR FILMES EM 4K LINKS ABAIXO![/COLOR][/B]' , [ '[COLOR deepskyblue][B]BAIXAR[/COLOR][/B][COLOR orange][B] ELEMENTUM[/COLOR][/B]' , '[COLOR deepskyblue][B]BAIXAR[/COLOR][/B][COLOR orange][B] ELEMENTUM BURST[/COLOR][/B]' , '' ] )
 if I1i1Iiiii == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://github.com/elgatito/plugin.video.elementum/releases/download/v0.1.58/plugin.video.elementum-0.1.58.zip' ) )
  else :
   webbrowser . open ( 'https://github.com/elgatito/plugin.video.elementum/releases/download/v0.1.58/plugin.video.elementum-0.1.58.zip' )
 if I1i1Iiiii == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://github.com/elgatito/script.elementum.burst/releases/download/v0.0.49/script.elementum.burst-0.0.49.zip' ) )
  else :
   webbrowser . open ( 'https://github.com/elgatito/script.elementum.burst/releases/download/v0.0.49/script.elementum.burst-0.0.49.zip' )
   if 94 - 94: i1 * iII111i / I11i11Ii / iII111i
 if I1i1Iiiii == 5 :
  xbmcaddon . Addon ( ) . openSettings ( )
  if 87 - 87: I11i11Ii . I1Ii111
  xbmc . executebuiltin ( "XBMC.Container.Refresh(%s?mode=None, replace)" % sys . argv [ 0 ] )
  xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
  if 75 - 75: o00O0oo + o0 + i1 * Ii1I % OOooOOo . IiII
def oOI1Ii1I1 ( ) :
 IiII111iI1ii1 = oO . getSetting ( 'username' )
 iI11I1II = oO . getSetting ( 'password' )
 Ii1IIiI1i = oO . getSetting ( 'servidor' )
 o0Oo00 = oO . getSetting ( 'exibirTORRENT' )
 iI = oO . getSetting ( 'saida' )
 if o0Oo00 == 'true' :
  if Ii1IIiI1i == 'TORRENT' :
   O0O0Oooo0o = 'http://sv1.iptvcasa.online:25461/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( IiII111iI1ii1 , iI11I1II , iI )
   I1IiiiiI ( Ii1IOo0o0 , O0O0Oooo0o , 1 , III1ii1iII , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if Ii1IIiI1i == 'Nenhum' :
   I1IiiiiI ( Ii1IOo0o0 , '' , 42 , III1ii1iII , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 IiII111iI1ii1 = oO . getSetting ( 'username2' )
 iI11I1II = oO . getSetting ( 'password2' )
 Ii1IIiI1i = oO . getSetting ( 'servidor2' )
 o0Oo00 = oO . getSetting ( 'exibirTORRENT2' )
 iI = oO . getSetting ( 'saida2' )
 if o0Oo00 == 'true' :
  if Ii1IIiI1i == 'TORRENT' :
   O0O0Oooo0o = 'http://cloudsteam.club:8080/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( IiII111iI1ii1 , iI11I1II , iI )
   I1IiiiiI ( titulo_TORRENT2 , O0O0Oooo0o , 1 , thumbnail_TORRENT2 , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if Ii1IIiI1i == 'Nenhum' :
   I1IiiiiI ( titulo_TORRENT2 , '' , 42 , thumbnail_TORRENT2 , fanart_TORRENT2 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
   if 56 - 56: ii1IiI1i % O0 - oOooOoO0Oo0O
def O00o0OO0 ( msg ) :
 IIi1I1iiiii = oO . getSetting ( 'mensagem1' )
 if IIi1I1iiiii == 'true' :
  I11iiI1i1 = xbmcgui . Dialog ( )
  I1i1Iiiii = I11iiI1i1 . select ( '[COLOR orange][B]AJUDE O ADD-ON FAÇA SUA[/COLOR][/B][COLOR deepskyblue][B] DOAÇÃO[/COLOR][/B]' , [ '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] SEJA VIP [/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] SITE OFICIAL![/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR lightcyan][B] PIC[/COLOR][/B][COLOR lime][B]PAY [/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR royalblue][B] PAY[/COLOR][/B][COLOR lightcyan][B]PAL [/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR blueviolet][B] NUBANK[/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR lightcyan][B] MERCADO[/COLOR][/B][COLOR dodgerblue][B]PAGO [/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] GRUPO TELEGRAM[/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] GRUPO FACEBOOK[/COLOR][/B]' , '[COLOR deepskyblue][B]ENTRAR NO[/COLOR][/B][COLOR orange][B] ADD-ON[/COLOR][/B]' ] )
  if 71 - 71: I1Ii111 * i11i * OOooOOo
  if I1i1Iiiii == 0 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://bit.ly/3hHpLCe-PV-APOLLO' ) )
   else :
    webbrowser . open ( 'https://bit.ly/3hHpLCe-PV-APOLLO' )
    if 56 - 56: oOooOoO0Oo0O
    if 54 - 54: ooOoO0o / I11i . OOooOOo % IiII
  if I1i1Iiiii == 1 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://deus-apollo.ml' ) )
   else :
    webbrowser . open ( 'http://deus-apollo.ml' )
    if 57 - 57: i11iIiiIii . ii1IiI1i - iII111i - OOooOOo + o0
    if 63 - 63: o0 * IiII
  if I1i1Iiiii == 2 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://picpay.me/deus.apollo' ) )
   else :
    webbrowser . open ( 'https://picpay.me/deus.apollo' )
    if 69 - 69: O0 . i1iIi11iIIi1I
    if 49 - 49: oOooOoO0Oo0O - Ii1I
  if I1i1Iiiii == 3 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=44A92DUKBAKAN&source=url' ) )
   else :
    webbrowser . open ( 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=44A92DUKBAKAN&source=url' )
    if 74 - 74: iIii1I11I1II1 * ii1IiI1i + o0 / i1IIi / i11i . I11i11Ii
    if 62 - 62: OoooooooOO * oOooOoO0Oo0O
  if I1i1Iiiii == 4 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://nubank.com.br/pagar/1djpv6/FJzleug9nF' ) )
   else :
    webbrowser . open ( 'https://nubank.com.br/pagar/1djpv6/FJzleug9nF' )
    if 58 - 58: o0 % i1
    if 50 - 50: ooOoO0o . i1
  if I1i1Iiiii == 5 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.mercadopago.com.br/checkout/v1/redirect?pref_id=203668628-f9a8d299-8b36-4cbd-84f4-0eb34ed0be11' ) )
   else :
    webbrowser . open ( 'https://www.mercadopago.com.br/checkout/v1/redirect?pref_id=203668628-f9a8d299-8b36-4cbd-84f4-0eb34ed0be11' )
    if 97 - 97: O0 + o0
    if 89 - 89: i1 + i1iIi11iIIi1I * Ii1I * iII111i
    if 37 - 37: OoooooooOO - O0 - i1
  if I1i1Iiiii == 6 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://telegram.me/DeusApollo' ) )
   else :
    webbrowser . open ( 'http://telegram.me/DeusApollo' )
    if 77 - 77: I11i * iIii1I11I1II1
  if I1i1Iiiii == 7 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.facebook.com/groups/Deus.Apollo' ) )
   else :
    webbrowser . open ( 'https://www.facebook.com/groups/Deus.Apollo' )
    if 98 - 98: oOooOoO0Oo0O % iII111i * OoooooooOO
  if I1i1Iiiii == 9 :
   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
   xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
   if 51 - 51: iIii1I11I1II1 . o0 / OOooOOo + i1
   if 33 - 33: o00O0oo . i11i % IiII + i1
  if I1i1Iiiii == 9 :
   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
   xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
   if 71 - 71: I11i11Ii % I11i
def O00oO000O0O ( msg ) :
 I1IiiiiI ( o00 , OO0O00 , 1 , oOO00Oo , i1iI11i1ii11 , o0O ( oO0o0o0ooO0oO ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 oOooOo0 ( True )
 oOI1Ii1I1 ( )
 if 18 - 18: IiII - I11i . ooOoO0o . iIii1I11I1II1
 i1I ( IIII , '' )
 I1IiiiiI ( o0Oo0O0Oo00oO , '' , 54 , I11i1I1I , i1iI11i1ii11 , o0O ( oOOoo0Oo ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 if 78 - 78: Ii1I * iIii1I11I1II1 . oOooOoO0Oo0O / i1 - OoooooooOO / ooOoO0o
 i1I1IiiIi1i ( )
 O00o0OO0 ( True )
 if 29 - 29: oOooOoO0Oo0O % oOooOoO0Oo0O
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 94 - 94: iIii1I11I1II1 / I11i11Ii % IiII * IiII * i11i
 if 29 - 29: i1iIi11iIIi1I + o0 / i1 / I11i * iIii1I11I1II1
def O0OO ( msg ) :
 try :
  ii1iI1I11I = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/version.txt" ) . read ( ) . replace ( '' , '' ) . replace ( '\r' , '' )
  ii1iI1I11I = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( ii1iI1I11I ) [ 0 ]
  if 20 - 20: OOooOOo / O0 * i1 - ooOoO0o % OoooooooOO * I1Ii111
  if ii1iI1I11I != Oo :
   III1111iIi1i1 ( )
   if 55 - 55: I1Ii111 * OoooooooOO + iIii1I11I1II1
  elif msg == True :
   if 17 - 17: OoooooooOO / iII111i % ii1IiI1i
   O00o0OO0 ( True )
   if 76 - 76: I1Ii111 * IiII
 except urllib2 . URLError , ooooooo00o :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( 'Apollo' , "Não foi possível checar" )
   if 73 - 73: I11i
def ooO ( msg ) :
 try :
  ii1iI1I11I = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/version.txt" ) . read ( ) . replace ( '' , '' ) . replace ( '\r' , '' )
  ii1iI1I11I = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( ii1iI1I11I ) [ 0 ]
  if 51 - 51: oOooOoO0Oo0O % ooOoO0o . OOooOOo / iIii1I11I1II1 / Ii1I . OOooOOo
  if ii1iI1I11I != Oo :
   III1111iIi1i1 ( )
   if 42 - 42: i1 + i1IIi - iII111i / I1Ii111
  elif msg == True :
   xbmcgui . Dialog ( ) . ok ( '[COLOR orange][B]APOLLO[/COLOR][/B]' , "[COLOR deepskyblue][B] O ADD-ON JÁ ESTÁ NA ÚLTIMA VERSÃO![/COLOR][/B][COLOR orange][B] 1.5.0[/COLOR][/B] " + Oo + "[COLOR deepskyblue][B] ATUALIZAÇÕES SÃO AUTOMÁTICAS SE NÃO ATUALIZA ENTRE NO SITE[/COLOR][/B][COLOR orange][B] http://deus-apollo.ml[/COLOR][/B]" )
   if 9 - 9: O0 % O0 - i1
 except urllib2 . URLError , ooooooo00o :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( 'Apollo' , "Não foi possível checar" )
   if 51 - 51: oOooOoO0Oo0O . iIii1I11I1II1 - ii1IiI1i / O0
   if 52 - 52: i1 + O0 + IiII + I11i11Ii % IiII
def III1111iIi1i1 ( ) :
 OO = xbmc . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) ) . decode ( "utf-8" )
 try :
  Ii1iI111II1I1 = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/apollo.py" ) . read ( ) . replace ( '' , '' )
  oOOOOoOO0o = re . compile ( 'checkintegrity' ) . findall ( Ii1iI111II1I1 )
  if oOOOOoOO0o :
   i1II1 = os . path . join ( OO , "apollo.py" )
   file = open ( i1II1 , "w" )
   file . write ( Ii1iI111II1I1 )
   file . close ( )
  Ii1iI111II1I1 = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/resources/settings.xml" ) . read ( ) . replace ( '' , '' )
  oOOOOoOO0o = re . compile ( '</settings>' ) . findall ( Ii1iI111II1I1 )
  if oOOOOoOO0o :
   i1II1 = os . path . join ( OO , "resources/settings.xml" )
   file = open ( i1II1 , "w" )
   file . write ( Ii1iI111II1I1 )
   file . close ( )
  Ii1iI111II1I1 = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/addon.xml" ) . read ( ) . replace ( '' , '' )
  oOOOOoOO0o = re . compile ( '</addon>' ) . findall ( Ii1iI111II1I1 )
  if oOOOOoOO0o :
   i1II1 = os . path . join ( OO , "addon.xml" )
   file = open ( i1II1 , "w" )
   file . write ( Ii1iI111II1I1 )
   file . close ( )
  xbmcgui . Dialog ( ) . ok ( '[COLOR deepskyblue][B]APOLLO[/COLOR][/B]' , "OBS: ADD-ON ESTÁ DESATUALIZADO! CLIQUE EM OK PARA ELE SE ALTO ATUALIZAR! CASO O ADD-ON NÃO SE ATUALIZE FAÇA O DOWNLOAD NO SITE OFICIAL! [COLOR deepskyblue][B]->[/COLOR][/B][COLOR orange][COLOR orange][B] https://deus-apollo.ml[/COLOR][/B]" ) . xbmc . executebuiltin
 except :
  xbmc . executebuiltin ( "Notification({0}, {1}, 9000, {2})" . format ( __addonname__ , "[COLOR orange][B]Atualizando o addon. Por favor aguarde 5 segundos e Pode Continuar![/COLOR][/B]" , __icon__ ) )
 xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 25 - 25: ooOoO0o / iIii1I11I1II1 % IiII
ooO ( False )
if 42 - 42: i11iIiiIii * iIii1I11I1II1 / ii1IiI1i . i11iIiiIii % Ii1I
def i1iI ( ) :
 IiI1iiiIii = {
 "Accept-Language" : "en-US,en;q=0.5" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" ,
 "Referer" : "APOLLO 1.4.9" ,
 "Connection" : "keep-alive"
 }
 I1III1111iIi = urllib2 . Request ( "https://whos.amung.us/pingjs/?k=c4302b" , headers = IiI1iiiIii )
 oO00OOoO00 = urllib2 . urlopen ( I1III1111iIi ) . read ( )
 if 38 - 38: IiII + Ii1I / ooOoO0o % o00O0oo - ii1IiI1i
 if 14 - 14: OOooOOo / ooOoO0o
i1iI ( )
if 85 - 85: Ii1I
def iI1i11II1i ( url , headers = None ) :
 try :
  if headers is None :
   if 96 - 96: ooOoO0o
   headers = { 'User-agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0) Gecko/20100101 Firefox/19.0' }
   headers = { 'User-agent' : '�}q�|{�\�~1�|{�\�}�ߜ{�\Ǯqߌ{�\�~q߼{�\�~�߬{�\ǭq߼{�\ǭ�ߌ{�\�~�߼{�\�}�ߌ{�\�1ߜ{�\�qߜ{�' }
  oOoOo0O0OOOoO = urllib2 . Request ( url , None , headers )
  oO00OOoO00 = urllib2 . urlopen ( oOoOo0O0OOOoO )
  IiI111111IIII = oO00OOoO00 . read ( )
  oO00OOoO00 . close ( )
  return IiI111111IIII
 except urllib2 . URLError , ooooooo00o :
  I1iI1iIi111i ( 'URL: ' + url )
  if hasattr ( ooooooo00o , 'code' ) :
   I1iI1iIi111i ( 'Falha com o código de erro - %s.' % ooooooo00o . code )
   if 50 - 50: o00O0oo
   if 47 - 47: I11i11Ii * ii1IiI1i + iIii1I11I1II1 / ooOoO0o / i1iIi11iIIi1I - OoooooooOO
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( ooooooo00o . code ) + ",10000," + oOO00Oo + ")" )
  elif hasattr ( ooooooo00o , 'reason' ) :
   I1iI1iIi111i ( 'Falha ao acessar um servidor.' )
   I1iI1iIi111i ( 'Razão: %s' % ooooooo00o . reason )
   if 33 - 33: o0 * I11i - i11i
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( ooooooo00o . reason ) + ",10000," + oOO00Oo + ")" )
   if 83 - 83: o0 - iII111i / Ii1I / ooOoO0o + OOooOOo - O0
def o0O ( url ) :
 IIi = urllib2 . build_opener ( )
 if 4 - 4: I11i * i1iIi11iIIi1I % i1IIi * i11iIiiIii % I11i11Ii - OOooOOo
 IIi . addheaders = [ ( 'User-Agent' , o0OOOOO00o0O0 ) ]
 oO00OOoO00 = IIi . open ( url )
 OOoOoOo = oO00OOoO00 . read ( )
 return OOoOoOo
 if 98 - 98: IiII
 if 68 - 68: iIii1I11I1II1 * iIii1I11I1II1 . i1 / i11i % I11i11Ii
def i1I1IiiIi1i ( ) :
 i1i11I11 = oO . getSetting ( 'mensagem2' )
 if i1i11I11 == 'true' :
  IIi = urllib2 . build_opener ( )
  if 10 - 10: O0 - OoooooooOO . o0
  IIi . addheaders = [ ( 'User-Agent' , o0OOOOO00o0O0 ) ]
  if 44 - 44: I1Ii111 - i1 . i1IIi . I1Ii111 * o0
  oO00OOoO00 = IIi . open ( OO0O0O00OooO )
  i1Ii1i1I11Iii = oO00OOoO00 . read ( )
  if 25 - 25: I1Ii111 + iII111i / o00O0oo . i1 % O0 * i1iIi11iIIi1I
  time = IiI1I1
  xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , i1Ii1i1I11Iii , time , __icon__ ) )
  if 84 - 84: o00O0oo % iII111i + i11iIiiIii
  if 28 - 28: I11i11Ii + i1iIi11iIIi1I * I11i % OOooOOo . Ii1I % O0
def I1iiiiIii ( ) :
 xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
 if 19 - 19: i1iIi11iIIi1I - I11i11Ii . O0
def ooOo00 ( ) :
 if os . path . exists ( O00OOOoOoo0O ) == True :
  I1IiiiiI ( 'Favorites' , 'url' , 4 , os . path . join ( ii1ii11IIIiiI , 'resources' , 'favorite.png' ) , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "browse_xml_database" ) == "true" :
  I1IiiiiI ( 'XML Database' , 'http://xbmcplus.xb.funpic.de/www-data/filesystem/' , 15 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "browse_community" ) == "true" :
  I1IiiiiI ( 'Community Files' , 'community_files' , 16 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
 if os . path . exists ( O000OOo00oo ) == True :
  I1IiiiiI ( 'Search History' , 'history' , 25 , os . path . join ( ii1ii11IIIiiI , 'resources' , 'favorite.png' ) , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "searchyt" ) == "true" :
  I1IiiiiI ( 'Search:Youtube' , 'youtube' , 25 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "searchDM" ) == "true" :
  I1IiiiiI ( 'Search:dailymotion' , 'dmotion' , 25 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "PulsarM" ) == "true" :
  I1IiiiiI ( 'Pulsar:IMDB' , 'IMDBidplay' , 27 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
  if os . path . exists ( OOooo0O00o ) == True :
   OOoo = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) )
   if 50 - 50: i1iIi11iIIi1I
  if len ( OOoo ) > 1 :
   for ii in OOoo :
    if 25 - 25: OoooooooOO - oOooOoO0Oo0O . oOooOoO0Oo0O * OOooOOo
    if isinstance ( ii , list ) :
     I1IiiiiI ( ii [ 0 ] . encode ( 'utf-8' ) , ii [ 1 ] . encode ( 'utf-8' ) , 1 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' , 'source' )
    else :
     o000oo = oOO00Oo
     o00o0 = i1iI11i1ii11
     II1I = ''
     II1I1I1Ii = ''
     credits = ''
     OOOOoO00o0O = ''
     I1I1I1IIi1III = ''
     II11IiiIII = ''
     o0OOOo = ''
     ii1iiIiIII1ii = ''
     oO0o0oooO0oO = ''
     IiIiII1 = ''
     Iii1iiIi1II = ''
     OO0O00oOo = ''
     ii1II = ''
     iI1I = ''
     OooOoOo = ''
     if ii . has_key ( 'thumbnail' ) :
      o000oo = ii [ 'thumbnail' ]
     if ii . has_key ( 'fanart' ) :
      o00o0 = ii [ 'fanart' ]
     if ii . has_key ( 'description' ) :
      II1I = ii [ 'description' ]
     if ii . has_key ( 'date' ) :
      II1I1I1Ii = ii [ 'date' ]
     if ii . has_key ( 'genre' ) :
      III1I1Iii1iiI = ii [ 'genre' ]
     if ii . has_key ( 'credits' ) :
      credits = ii [ 'credits' ]
     if ii . has_key ( 'year' ) :
      OOOOoO00o0O = ii [ 'year' ]
     if ii . has_key ( 'director' ) :
      I1I1I1IIi1III = ii [ 'director' ]
     if ii . has_key ( 'duration' ) :
      II11IiiIII = ii [ 'duration' ]
     if ii . has_key ( 'premiered' ) :
      o0OOOo = ii [ 'premiered' ]
     if ii . has_key ( 'studio' ) :
      ii1iiIiIII1ii = ii [ 'studio' ]
     if ii . has_key ( 'rate' ) :
      oO0o0oooO0oO = ii [ 'rate' ]
     if ii . has_key ( 'originaltitle' ) :
      IiIiII1 = ii [ 'originaltitle' ]
     if ii . has_key ( 'country' ) :
      Iii1iiIi1II = ii [ 'country' ]
     if ii . has_key ( 'rating' ) :
      OO0O00oOo = ii [ 'rating' ]
     if ii . has_key ( 'userrating' ) :
      ii1II = ii [ 'userrating' ]
     if ii . has_key ( 'votes' ) :
      iI1I = ii [ 'votes' ]
     if ii . has_key ( 'aired' ) :
      OooOoOo = ii [ 'aired' ]
     I1IiiiiI ( ii [ 'title' ] . encode ( 'utf-8' ) , ii [ 'url' ] . encode ( 'utf-8' ) , 1 , o000oo , o00o0 , II1I , III1I1Iii1iiI , II1I1I1Ii , credits , OOOOoO00o0O , I1I1I1IIi1III , II11IiiIII , o0OOOo , ii1iiIiIII1ii , oO0o0oooO0oO , IiIiII1 , Iii1iiIi1II , OO0O00oOo , ii1II , iI1I , OooOoOo , 'source' )
     if 17 - 17: iII111i % iIii1I11I1II1 - iIii1I11I1II1
  else :
   if len ( OOoo ) == 1 :
    if isinstance ( OOoo [ 0 ] , list ) :
     i1I ( OOoo [ 0 ] [ 1 ] . encode ( 'utf-8' ) , i1iI11i1ii11 )
    else :
     i1I ( OOoo [ 0 ] [ 'url' ] , OOoo [ 0 ] [ 'fanart' ] )
     if 78 - 78: IiII + Ii1I . o00O0oo - IiII . iII111i
     if 30 - 30: oOooOoO0Oo0O + i1iIi11iIIi1I % iII111i * IiII / I11i11Ii - Ii1I
def oooiIi1i ( url = None ) :
 if url is None :
  if not oO . getSetting ( "new_file_source" ) == "" :
   I1i11111i1i11 = oO . getSetting ( 'new_file_source' ) . decode ( 'utf-8' )
  elif not oO . getSetting ( "new_url_source" ) == "" :
   I1i11111i1i11 = oO . getSetting ( 'new_url_source' ) . decode ( 'utf-8' )
 else :
  I1i11111i1i11 = url
 if I1i11111i1i11 == '' or I1i11111i1i11 is None :
  return
 I1iI1iIi111i ( 'Adding New Source: ' + I1i11111i1i11 . encode ( 'utf-8' ) )
 if 77 - 77: ii1IiI1i + i1iIi11iIIi1I / OOooOOo + O0 * i1
 I1ii11 = None
 if 74 - 74: I11i11Ii - i1 . i1IIi
 IiI111111IIII = i1III ( I1i11111i1i11 )
 print 'source_url' , I1i11111i1i11
 if isinstance ( IiI111111IIII , BeautifulSOAP ) :
  if IiI111111IIII . find ( 'channels_info' ) :
   I1ii11 = IiI111111IIII . channels_info
  elif IiI111111IIII . find ( 'items_info' ) :
   I1ii11 = IiI111111IIII . items_info
 if I1ii11 :
  iii1Ii1Ii1 = { }
  iii1Ii1Ii1 [ 'url' ] = I1i11111i1i11
  try : iii1Ii1Ii1 [ 'title' ] = I1ii11 . title . string
  except : pass
  try : iii1Ii1Ii1 [ 'thumbnail' ] = I1ii11 . thumbnail . string
  except : pass
  try : iii1Ii1Ii1 [ 'fanart' ] = I1ii11 . fanart . string
  except : pass
  try : iii1Ii1Ii1 [ 'genre' ] = I1ii11 . genre . string
  except : pass
  try : iii1Ii1Ii1 [ 'description' ] = I1ii11 . description . string
  except : pass
  try : iii1Ii1Ii1 [ 'date' ] = I1ii11 . date . string
  except : pass
  try : iii1Ii1Ii1 [ 'credits' ] = I1ii11 . credits . string
  except : pass
  try : iii1Ii1Ii1 [ 'year' ] = I1ii11 . year . string
  except : pass
  try : iii1Ii1Ii1 [ 'director' ] = I1ii11 . director . string
  except : pass
  try : iii1Ii1Ii1 [ 'premiered' ] = I1ii11 . premiered . string
  except : pass
  try : iii1Ii1Ii1 [ 'studio' ] = I1ii11 . studio . string
  except : pass
  try : iii1Ii1Ii1 [ 'rate' ] = I1ii11 . rate . string
  except : pass
  try : iii1Ii1Ii1 [ 'originaltitle' ] = I1ii11 . originaltitle . string
  except : pass
  try : iii1Ii1Ii1 [ 'country' ] = I1ii11 . country . string
  except : pass
  try : iii1Ii1Ii1 [ 'rating' ] = I1ii11 . rating . string
  except : pass
  try : iii1Ii1Ii1 [ 'userrating' ] = I1ii11 . userrating . string
  except : pass
  try : iii1Ii1Ii1 [ 'votes' ] = I1ii11 . votes . string
  except : pass
  try : iii1Ii1Ii1 [ 'aired' ] = I1ii11 . aired . string
  except : pass
 else :
  if '/' in I1i11111i1i11 :
   IIiooO0oOo0o = I1i11111i1i11 . split ( '/' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '\\' in I1i11111i1i11 :
   IIiooO0oOo0o = I1i11111i1i11 . split ( '\\' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '%' in IIiooO0oOo0o :
   IIiooO0oOo0o = urllib . unquote_plus ( IIiooO0oOo0o )
  OOii111IiiI1 = xbmc . Keyboard ( IIiooO0oOo0o , 'Displayed Name, Rename?' )
  OOii111IiiI1 . doModal ( )
  if ( OOii111IiiI1 . isConfirmed ( ) == False ) :
   return
  ii11i1iIiII1 = OOii111IiiI1 . getText ( )
  if len ( ii11i1iIiII1 ) == 0 :
   return
  iii1Ii1Ii1 = { }
  iii1Ii1Ii1 [ 'title' ] = ii11i1iIiII1
  iii1Ii1Ii1 [ 'url' ] = I1i11111i1i11
  iii1Ii1Ii1 [ 'fanart' ] = o00o0
  if 63 - 63: i1iIi11iIIi1I
 if os . path . exists ( OOooo0O00o ) == False :
  Oo0 = [ ]
  Oo0 . append ( iii1Ii1Ii1 )
  oooooOOO000Oo = open ( OOooo0O00o , "w" )
  oooooOOO000Oo . write ( json . dumps ( Oo0 ) )
  oooooOOO000Oo . close ( )
 else :
  OOoo = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) )
  OOoo . append ( iii1Ii1Ii1 )
  oooooOOO000Oo = open ( OOooo0O00o , "w" )
  oooooOOO000Oo . write ( json . dumps ( OOoo ) )
  oooooOOO000Oo . close ( )
 oO . setSetting ( 'new_url_source' , "" )
 oO . setSetting ( 'new_file_source' , "" )
 if 52 - 52: i11i % I1Ii111 . o0 * iIii1I11I1II1
 xbmc . executebuiltin ( "XBMC.Notification(New source added.,5000," + oOO00Oo + ")" )
 if not url is None :
  if 'xbmcplus.xb.funpic.de' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=14,replace)" % sys . argv [ 0 ] )
  elif 'community-links' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=10,replace)" % sys . argv [ 0 ] )
 else : oO . openSettings ( )
 if 50 - 50: o00O0oo - ooOoO0o * I1Ii111 . ii1IiI1i
 if 37 - 37: o00O0oo % i11iIiiIii % i11i . O0 . iII111i
def OO0oOOoo ( name ) :
 OOoo = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) )
 for oOOO00o000o in range ( len ( OOoo ) ) :
  if isinstance ( OOoo [ oOOO00o000o ] , list ) :
   if OOoo [ oOOO00o000o ] [ 0 ] == name :
    del OOoo [ oOOO00o000o ]
    oooooOOO000Oo = open ( OOooo0O00o , "w" )
    oooooOOO000Oo . write ( json . dumps ( OOoo ) )
    oooooOOO000Oo . close ( )
    break
  else :
   if OOoo [ oOOO00o000o ] [ 'title' ] == name :
    del OOoo [ oOOO00o000o ]
    oooooOOO000Oo = open ( OOooo0O00o , "w" )
    oooooOOO000Oo . write ( json . dumps ( OOoo ) )
    oooooOOO000Oo . close ( )
    break
 xbmc . executebuiltin ( "XBMC.Container.Refresh" )
 if 9 - 9: OOooOOo + Ii1I / Ii1I
 if 12 - 12: OoooooooOO % i1 * Ii1I % iIii1I11I1II1 / iII111i
 if 27 - 27: i11iIiiIii % i11i % Ii1I . O0 - I11i11Ii + o0
def ooO0o ( url , browse = False ) :
 if url is None :
  url = 'http://xbmcplus.xb.funpic.de/www-data/filesystem/'
 ooOOo00O00Oo = BeautifulSoup ( iI1i11II1i ( url ) , convertEntities = BeautifulSoup . HTML_ENTITIES )
 for ii in ooOOo00O00Oo ( 'a' ) :
  IiII1 = ii [ 'href' ]
  if not IiII1 . startswith ( '?' ) :
   I1iIi1iIiiIiI = ii . string
   if I1iIi1iIiiIiI not in [ 'Parent Directory' , 'recycle_bin/' ] :
    if IiII1 . endswith ( '/' ) :
     if browse :
      I1IiiiiI ( I1iIi1iIiiIiI , url + IiII1 , 15 , oOO00Oo , o00o0 , '' , '' , '' )
     else :
      I1IiiiiI ( I1iIi1iIiiIiI , url + IiII1 , 14 , oOO00Oo , o00o0 , '' , '' , '' )
    elif IiII1 . endswith ( '.xml' ) :
     if browse :
      I1IiiiiI ( I1iIi1iIiiIiI , url + IiII1 , 1 , oOO00Oo , o00o0 , '' , '' , '' , '' , 'download' )
     else :
      if os . path . exists ( OOooo0O00o ) == True :
       if I1iIi1iIiiIiI in I1 :
        I1IiiiiI ( I1iIi1iIiiIiI + ' (in use)' , url + IiII1 , 11 , oOO00Oo , o00o0 , '' , '' , '' , '' , 'download' )
       else :
        I1IiiiiI ( I1iIi1iIiiIiI , url + IiII1 , 11 , oOO00Oo , o00o0 , '' , '' , '' , '' , 'download' )
      else :
       I1IiiiiI ( I1iIi1iIiiIiI , url + IiII1 , 11 , oOO00Oo , o00o0 , '' , '' , '' , '' , 'download' )
       if 47 - 47: iII111i + ooOoO0o / i1IIi % i11iIiiIii
       if 42 - 42: IiII + I1Ii111
def o00oOoOo0 ( browse = False ) :
 O0O0Oooo0o = 'http://community-links.googlecode.com/svn/trunk/'
 ooOOo00O00Oo = BeautifulSoup ( iI1i11II1i ( O0O0Oooo0o ) , convertEntities = BeautifulSoup . HTML_ENTITIES )
 o0O0O0ooo0oOO = ooOOo00O00Oo ( 'ul' ) [ 0 ] ( 'li' ) [ 1 : ]
 for ii in o0O0O0ooo0oOO :
  I1iIi1iIiiIiI = ii ( 'a' ) [ 0 ] [ 'href' ]
  if browse :
   I1IiiiiI ( I1iIi1iIiiIiI , O0O0Oooo0o + I1iIi1iIiiIiI , 1 , oOO00Oo , o00o0 , '' , '' , '' , '' , 'download' )
  else :
   I1IiiiiI ( I1iIi1iIiiIiI , O0O0Oooo0o + I1iIi1iIiiIiI , 11 , oOO00Oo , o00o0 , '' , '' , '' , '' , 'download' )
   if 97 - 97: oOooOoO0Oo0O / IiII
   if 71 - 71: i11i / i1IIi . ii1IiI1i % OoooooooOO . o0
def i1III ( url , data = None ) :
 global o0OO00 , iI1
 iI1 = False
 if url . startswith ( 'http://' ) or url . startswith ( 'https://' ) :
  Iiiiii111i1ii = False
  if '$$TSDOWNLOADER$$' in url :
   iI1 = True
   url = url . replace ( "$$TSDOWNLOADER$$" , "" )
  if '$$LSProEncKey=' in url :
   Iiiiii111i1ii = url . split ( '$$LSProEncKey=' ) [ 1 ] . split ( '$$' ) [ 0 ]
   i1i1iII1 = '$$LSProEncKey=%s$$' % Iiiiii111i1ii
   url = url . replace ( i1i1iII1 , "" )
  try :
   print 'myRequest' , url , data
   data = iI1i11II1i ( url )
   import gzip , binascii
   from StringIO import StringIO
   if 'tgjds' [ : : - 1 ] in data :
    data = data . split ( 'tgjds' [ : : - 1 ] )
    iii11i1IIII = StringIO ( binascii . unhexlify ( data [ 0 ] ) )
    Ii = gzip . GzipFile ( fileobj = iii11i1IIII )
    data = Ii . read ( )
  except :
   data = iI1i11II1i ( url )
  if Iiiiii111i1ii :
   import pyaes
   Iiiiii111i1ii = Iiiiii111i1ii . encode ( "ascii" )
   print Iiiiii111i1ii
   o00iiI1Ii1 = 16 - len ( Iiiiii111i1ii )
   Iiiiii111i1ii = Iiiiii111i1ii + ( chr ( 0 ) * ( o00iiI1Ii1 ) )
   print repr ( Iiiiii111i1ii )
   data = base64 . b64decode ( data )
   ii1i = pyaes . new ( Iiiiii111i1ii , pyaes . MODE_ECB , IV = None )
   data = ii1i . decrypt ( data ) . split ( '\0' ) [ 0 ]
   if 62 - 62: i1iIi11iIIi1I / ii1IiI1i
  if re . search ( "#EXTM3U" , data ) or 'm3u' in url :
   if 7 - 7: OoooooooOO . I1Ii111
   return data
 elif data == None :
  if not '/' in url or not '\\' in url :
   if 53 - 53: iII111i % iII111i * i1 + o0
   url = os . path . join ( communityfiles , url )
  if xbmcvfs . exists ( url ) :
   if url . startswith ( "smb://" ) or url . startswith ( "nfs://" ) :
    Oooo00 = xbmcvfs . copy ( url , os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) )
    if Oooo00 :
     data = open ( os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) , "r" ) . read ( )
     xbmcvfs . delete ( os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) )
    else :
     I1iI1iIi111i ( "failed to copy from smb:" )
   else :
    data = open ( url , 'r' ) . read ( )
    if re . match ( "#EXTM3U" , data ) or 'm3u' in url :
     if 6 - 6: iII111i - o00O0oo * I11i . IiII / O0 * o00O0oo
     return data
  else :
   I1iI1iIi111i ( "Soup Data not found!" )
   return
 if '<SetViewMode>' in data :
  try :
   o0OO00 = re . findall ( '<SetViewMode>(.*?)<' , data ) [ 0 ]
   xbmc . executebuiltin ( "Container.SetViewMode(%s)" % o0OO00 )
   print 'done setview' , o0OO00
  except : pass
 return BeautifulSOAP ( data , convertEntities = BeautifulStoneSoup . XML_ENTITIES )
 if 22 - 22: I11i11Ii % IiII * ii1IiI1i / I11i % i11iIiiIii * Ii1I
 if 95 - 95: OoooooooOO - I1Ii111 * oOooOoO0Oo0O + o0
def i1I ( url , fanart , data = None ) :
 if 10 - 10: i1 / i11iIiiIii
 o00oO = "List"
 if 92 - 92: I1Ii111 * I11i11Ii * I11i11Ii * oOooOoO0Oo0O . iIii1I11I1II1
 ooOOo00O00Oo = i1III ( url , data )
 if 16 - 16: o00O0oo % OoooooooOO - I11i * iII111i * ii1IiI1i / OoooooooOO
 if isinstance ( ooOOo00O00Oo , BeautifulSOAP ) :
  if len ( ooOOo00O00Oo ( 'layoutype' ) ) > 0 :
   o00oO = "thumbnail"
   if 31 - 31: Ii1I . ooOoO0o * o00O0oo + i11iIiiIii * OOooOOo
  if len ( ooOOo00O00Oo ( 'channels' ) ) > 0 :
   OO0o = ooOOo00O00Oo ( 'channel' )
   for oo0o0O0Oooooo in OO0o :
    if 1 - 1: o00O0oo % o0 * I11i11Ii
    if 55 - 55: o0
    Ooo0oo0ooO = ''
    OoOOOo0o0ooo = 0
    try :
     Ooo0oo0ooO = oo0o0O0Oooooo ( 'externallink' ) [ 0 ] . string
     OoOOOo0o0ooo = len ( oo0o0O0Oooooo ( 'externallink' ) )
    except : pass
    if 19 - 19: Ii1I % i11i / i11iIiiIii / IiII - OoooooooOO
    if OoOOOo0o0ooo > 1 : Ooo0oo0ooO = ''
    if 37 - 37: I11i / OoooooooOO - i11iIiiIii
    I1iIi1iIiiIiI = oo0o0O0Oooooo ( 'name' ) [ 0 ] . string
    i1iIiIi1I = oo0o0O0Oooooo ( 'thumbnail' ) [ 0 ] . string
    if i1iIiIi1I == None :
     i1iIiIi1I = ''
     if 45 - 45: i1IIi + i11i
    try :
     if not oo0o0O0Oooooo ( 'fanart' ) :
      if oO . getSetting ( 'use_thumb' ) == "true" :
       IiII1II11I = i1iIiIi1I
      else :
       IiII1II11I = fanart
     else :
      IiII1II11I = oo0o0O0Oooooo ( 'fanart' ) [ 0 ] . string
     if IiII1II11I == None :
      raise
    except :
     IiII1II11I = fanart
     if 54 - 54: I1Ii111 + O0 + Ii1I * ooOoO0o - I11i % OOooOOo
    try :
     II1I = oo0o0O0Oooooo ( 'info' ) [ 0 ] . string
     if II1I == None :
      raise
    except :
     II1I = ''
     if 13 - 13: o00O0oo / IiII * i1iIi11iIIi1I . i1iIi11iIIi1I * o00O0oo
    try :
     III1I1Iii1iiI = oo0o0O0Oooooo ( 'genre' ) [ 0 ] . string
     if III1I1Iii1iiI == None :
      raise
    except :
     III1I1Iii1iiI = ''
     if 63 - 63: ooOoO0o / O0 * I11i11Ii + i11i / I1Ii111 + iII111i
    try :
     II1I1I1Ii = oo0o0O0Oooooo ( 'date' ) [ 0 ] . string
     if II1I1I1Ii == None :
      raise
    except :
     II1I1I1Ii = ''
     if 63 - 63: i1iIi11iIIi1I + ii1IiI1i . ooOoO0o % ooOoO0o
    try :
     credits = oo0o0O0Oooooo ( 'credits' ) [ 0 ] . string
     if credits == None :
      raise
    except :
     credits = ''
     if 57 - 57: i11i
    try :
     OOOOoO00o0O = oo0o0O0Oooooo ( 'year' ) [ 0 ] . string
     if OOOOoO00o0O == None :
      raise
    except :
     OOOOoO00o0O = ''
     if 54 - 54: I11i11Ii + OOooOOo + i11iIiiIii
    try :
     I1I1I1IIi1III = oo0o0O0Oooooo ( 'director' ) [ 0 ] . string
     if I1I1I1IIi1III == None :
      raise
    except :
     I1I1I1IIi1III = ''
     if 28 - 28: OOooOOo
    try :
     II11IiiIII = oo0o0O0Oooooo ( 'duration' ) [ 0 ] . string
     if II11IiiIII == None :
      raise
    except :
     II11IiiIII = ''
     if 70 - 70: I1Ii111
    try :
     o0OOOo = oo0o0O0Oooooo ( 'premiered' ) [ 0 ] . string
     if o0OOOo == None :
      raise
    except :
     o0OOOo = ''
     if 34 - 34: ooOoO0o % I1Ii111
    try :
     ii1iiIiIII1ii = oo0o0O0Oooooo ( 'studio' ) [ 0 ] . string
     if ii1iiIiIII1ii == None :
      raise
    except :
     ii1iiIiIII1ii = ''
     if 3 - 3: i11i / I11i + I1Ii111 . o00O0oo . i1iIi11iIIi1I
    try :
     oO0o0oooO0oO = oo0o0O0Oooooo ( 'rate' ) [ 0 ] . string
     if oO0o0oooO0oO == None :
      raise
    except :
     oO0o0oooO0oO = ''
     if 83 - 83: OOooOOo + OoooooooOO
    try :
     IiIiII1 = oo0o0O0Oooooo ( 'originaltitle' ) [ 0 ] . string
     if IiIiII1 == None :
      raise
    except :
     IiIiII1 = ''
     if 22 - 22: iII111i % IiII * OoooooooOO - i1 / iIii1I11I1II1
    try :
     Iii1iiIi1II = oo0o0O0Oooooo ( 'country' ) [ 0 ] . string
     if Iii1iiIi1II == None :
      raise
    except :
     Iii1iiIi1II = ''
     if 86 - 86: OoooooooOO . IiII % o0 / Ii1I * IiII / i1
    try :
     oOoOOo000oOoO0 = oo0o0O0Oooooo ( 'mediatype' ) [ 0 ] . string
     if oOoOOo000oOoO0 == None :
      raise
    except :
     oOoOOo000oOoO0 = ''
     if 86 - 86: i11i % i11iIiiIii + iII111i % i11iIiiIii
    try :
     OO0O00oOo = oo0o0O0Oooooo ( 'rating' ) [ 0 ] . string
     if OO0O00oOo == None :
      raise
    except :
     OO0O00oOo = ''
     if 92 - 92: i11iIiiIii - IiII / o00O0oo / OOooOOo
    try :
     ii1II = oo0o0O0Oooooo ( 'userrating' ) [ 0 ] . string
     if ii1II == None :
      raise
    except :
     ii1II = ''
     if 43 - 43: i11i + I11i + IiII
    try :
     iI1I = oo0o0O0Oooooo ( 'votes' ) [ 0 ] . string
     if iI1I == None :
      raise
    except :
     iI1I = ''
     if 40 - 40: i1
    try :
     OooOoOo = oo0o0O0Oooooo ( 'aired' ) [ 0 ] . string
     if OooOoOo == None :
      raise
    except :
     OooOoOo = ''
     if 67 - 67: OOooOOo + i1'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))