# encoded by pyprotect
# https://keltecmp.net/pyprotect
#checkintegrity090820

import base64, codecs
magic = '﻿# -*- coding: utf-8 -*-
import urllib , urlparse , sys , xbmcplugin , xbmcgui , xbmcaddon , xbmc , os , json , hashlib , re , urllib2 , htmlentitydefs
import shutil
import xbmc
import webbrowser
if 64 - 64: i11iIiiIii
OO0o = "12.10.2020b"
if 81 - 81: Iii1I1 + OO0O0O % iiiii % ii1I - ooO0OO000o
ii11i = 'plugin.video.KelTecPlay'
oOooOoO0Oo0O = xbmcaddon . Addon ( ii11i )
iI1 = oOooOoO0Oo0O . getAddonInfo ( "name" )
i1I11i = oOooOoO0Oo0O . getAddonInfo ( 'icon' )
if 73 - 73: III - oo00oOOo * Oooo000o % OOo . OOO
IiI1ii1 = oOooOoO0Oo0O . getAddonInfo ( 'path' ) . decode ( "utf-8" )
oooOOooo = os . path . join ( IiI1ii1 , "resources" , "images" )
if 64 - 64: o0oo * O00ooOO
I1iII1iiII = os . path . join ( IiI1ii1 , 'resources' , 'lib' )
sys . path . insert ( 0 , I1iII1iiII )
import common
if 28 - 28: Ii11111i * iiI1i1
i1I1ii1II1iII = xbmc . translatePath ( oOooOoO0Oo0O . getAddonInfo ( "profile" ) ) . decode ( "utf-8" )
oooO0oo0oOOOO = os . path . join ( i1I1ii1II1iII , "cache" )
if not os . path . exists ( oooO0oo0oOOOO ) :
 os . makedirs ( oooO0oo0oOOOO )
 if 53 - 53: o0oo0o / Oo + OOo00O0Oo0oO / iIi * ooO00oOoo - o0oo0o
oOOoo00O0O = oOooOoO0Oo0O . getSetting ( "cadulto" )
i1111 = oOooOoO0Oo0O . getSetting ( "cPage" )
i11 = oOooOoO0Oo0O . getSetting ( "cPageleg" )
I11 = oOooOoO0Oo0O . getSetting ( "cPagenac" )
Oo0o0000o0o0 = oOooOoO0Oo0O . getSetting ( "cPagelan" )
oOo0oooo00o = oOooOoO0Oo0O . getSetting ( "cPageser" )
oO0o0o0ooO0oO = oOooOoO0Oo0O . getSetting ( "cPageani" )
oo0o0O00 = oOooOoO0Oo0O . getSetting ( "cPagedes" )
oO = oOooOoO0Oo0O . getSetting ( "cPagefo1" )
i1iiIIiiI111 = oOooOoO0Oo0O . getSetting ( "cPageMMf" )
oooOOOOO = oOooOoO0Oo0O . getSetting ( "cPageGOf" )
if 22 - 22: o0oo0o * Iii1I1 / OOO
o00ooooO0oO = oOooOoO0Oo0O . getSetting ( "cEPG" )
oOoOo00oOo = "date" if oOooOoO0Oo0O . getSetting ( "cOrdFO" ) == "0" else "title"
Ooo00O00O0O0O = "date" if oOooOoO0Oo0O . getSetting ( "cOrdRCF" ) == "0" else "title"
OooO0OO = "date" if oOooOoO0Oo0O . getSetting ( "cOrdRCS" ) == "0" else "title"
iiiIi = oOooOoO0Oo0O . getSetting ( "cOrdNCF" )
IiIIIiI1I1 = oOooOoO0Oo0O . getSetting ( "cOrdNCS" )
if 86 - 86: i11iIiiIii + o0oo0o + ooO00oOoo * iiI1i1 + OOO
oOoO = oOooOoO0Oo0O . getSetting ( "Cat" )
oOo = oOooOoO0Oo0O . getSetting ( "Catfo" )
oOoOoO = oOooOoO0Oo0O . getSetting ( "CatMM" )
ii1IOooO0 = oOooOoO0Oo0O . getSetting ( "CatGO" )
if 35 - 35: Ii11111i % iIi % i11iIiiIii / iiiii
Ii11iI1i = [ "todos" , "acao" , "animacao" , "aventura" , "comedia" , "drama" , "fantasia" , "ficcao-cientifica" , "romance" , "suspense" , "terror" ]
Ooo = [ "Sem filtro (Mostrar Todos)" , "Acao" , "Animacao" , "Aventura" , "Comedia" , "Drama" , "Fantasia" , "Ficcao-Cientifica" , "Romance" , "Suspense" , "Terror" ]
O0o0Oo = [ "Sem filtro (Mostrar Todos)" , "Ação" , "Animação" , "Aventura" , "Comédia" , "Drama" , "Fantasia" , "Ficção-Científica" , "Romance" , "Suspense" , "Terror" ]
Oo00OOOOO = [ "0" , "48" , "3" , "7" , "8" , "5" , "4" , "14" , "16" , "15" , "11" ]
O0O = [ "Sem filtro (Mostrar Todos)" , "Lançamentos" , "Ação" , "Animação" , "Aventura" , "Comédia" , "Drama" , "Ficção-Científica" , "Romance" , "Suspense" , "Terror" ]
O00o0OO = [ "lancamentos" , "acao" , "animacao" , "aventura" , "comedia" , "drama" , "fantasia" , "ficcao-cientifica" , "guerra" , "policial" , "romance" , "suspense" , "terror" ]
I11i1 = [ "Lançamentos" , "Ação" , "Animação" , "Aventura" , "Comédia" , "Drama" , "Fantasia" , "F. Científica" , "Guerra" , "Policial" , "Romance" , "Suspense" , "Terror" ]
iIi1ii1I1 = [ "all" , "lancamentos" , "acao" , "animacao" , "aventura" , "comedia" , "drama" , "ficcao-cientifica" , "guerra" , "policial" , "romance" , "suspense" , "terror" ]
o0 = [ "Sem filtro (Mostrar Todos)" , "Lançamentos" , "Ação" , "Animação" , "Aventura" , "Comédia" , "Drama" , "Ficção-Científica" , "Guerra" , "Policial" , "Romance" , "Suspense" , "Terror" ]
if 9 - 9: o0oo0o + O00ooOO % o0oo0o + ii1I . Ii11111i
def III1i1i ( ) :
 xbmcplugin . setContent ( int ( sys . argv [ 1 ] ) , 'tvshows' )
def iiI1 ( ) :
 xbmcplugin . setContent ( int ( sys . argv [ 1 ] ) , 'movies' )
 if 19 - 19: iiI1i1 + ooO00oOoo
ooo = os . path . join ( i1I1ii1II1iII , 'favoritesf.txt' )
ii1I1i1I = os . path . join ( i1I1ii1II1iII , 'favoritess.txt' )
OOoo0O0 = os . path . join ( i1I1ii1II1iII , 'historic.txt' )
if 41 - 41: O00ooOO
if 6 - 6: o0oo
I1I = "true"
oOO00oOO = "http://KelTecPlay-iptv.directorioforuns.com/h113-baixe"
if 75 - 75: ii1I / iiiii - Iii1I1 / OOo . ooO0OO000o - ii1I
O000OO0 = oOO00oOO + "nc/"
I11iii1Ii = oOO00oOO + "fo/"
if 13 - 13: iIi % OOo - i11iIiiIii . III + ooO0OO000o
def II111ii1II1i ( id ) :
 return oOooOoO0Oo0O . getLocalizedString ( id ) . encode ( 'utf-8' )
 if 59 - 59: Iii1I1 + III + OOo00O0Oo0oO % III
def o0OOoo0OO0OOO ( msg ) :
 if 19 - 19: O00ooOO % ii1I % OOO
 oo0OooOOo0 ( "[B][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]" , "" , - 0 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = False , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [B]CENTRO DE ENTRETENIMENTOS![/B][B] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nSUPORTE OFICIAL KELTEC MEDIA-PLAY [COLOR orange]|[/COLOR] FILMES [COLOR orange]|[/COLOR] SERIES [COLOR orange]|[/COLOR] DESENHOS [COLOR orange]|[/COLOR] ANIMES [COLOR orange]|[/COLOR] MELHORES LANÇAMENTOS DUBLADOS E LEGENDADOS! [COLOR orange]|[/COLOR]" )
 oo0OooOOo0 ( "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] SUPORTE[/COLOR][COLOR crimson] |[/COLOR][COLOR orange] TOP VIP [/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]" , "config" , 44 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B][B][COLOR red] AVISO IMPORTANTE! [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\n[/COLOR]OLÁ SEJA BEM-VINDO AO SUPORTE EXCLUSIVO: [COLOR gold]VIP[/COLOR], QUALIDADE E MUITO ENTRETENIMENTO PARA TODA FAMÍLIA, [B][COLOR orange]|[/COLOR][/B] PEÇA UM TESTE AGORA E PARE DE SOFRER COM TRAVAMENTOS! [B][COLOR orange]|[/COLOR][/B]" )
 oo0OooOOo0 ( "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]AJUDAR [COLOR crimson]|[/COLOR] PROJETO[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]" , "config" , 46 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B][B][COLOR red] AVISO IMPORTANTE! [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\n[B][COLOR orange]|[/COLOR][/B][/COLOR] NÃO OBRIGATÓRIO! [B][COLOR orange]|[/COLOR][/B] ESTE RECURSO É PARA AQUELES QUE ADMIRAM NOSSO TRABALHO KELTEC MEDIA-PLAY, [B][COLOR orange]|[/COLOR][/B] POR FAVOR NÃO SE CINTA OBRIGADO, [B][COLOR orange]|[/COLOR][/B] DOE SOMENTE SE NÃO FOR LHE FAZER FALTA [B][COLOR orange]|[/COLOR][/B] Deus Abençoe! >> AGRADEÇO A TODOS CONTRIBUINTES! << [B][COLOR orange]|[/COLOR][/B]" )
 oo0OooOOo0 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orange]|[/COLOR] [/COLOR][COLOR silver]Busca[/B][/COLOR]" , "" , 160 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B][COLOR white]PESQUISA DE FILMES & SÉRIES[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\n[B][COLOR orange]|[/COLOR][/B] [COLOR white]PARA TODA FAMÍLIA[/COLOR] [B][COLOR orange]|[/COLOR][/B]\n[B][COLOR orange]|[/COLOR][/B] KelTec Media'Play [B][COLOR orange]|[/COLOR][/B]" )
 oo0OooOOo0 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orange]|[/COLOR] [/COLOR][COLOR silver]Filmes[/COLOR][/B]" , "" , - 2 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B][COLOR white]FILMES[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nA telinha tem cada vez mais diversão.\nComédia, ação, dramas, entrevistas, viagens...\nAqui você encontra o que há de melhor entre os melhores Lançamentos de  Filmes e Séries da TV.\n[B][COLOR orange]|[/COLOR][/B] KelTec Media'Play [B][COLOR orange]|[/COLOR][/B]" )
 oo0OooOOo0 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orange]|[/COLOR] [/COLOR][COLOR silver]Séries[/B][/COLOR]" , "config" , 190 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B][COLOR white]SÉRIES[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nA telinha tem cada vez mais diversão.\nComédia, ação, dramas, entrevistas, viagens...\nAqui você encontra o que há de melhor entre os melhores Lançamentos de  Filmes e Séries da TV.\n[B][COLOR orange]|[/COLOR][/B] KelTec Media'Play [B][COLOR orange]|[/COLOR][/B]" )
 oo0OooOOo0 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orange]|[/COLOR] [/COLOR][COLOR silver][B]Filmes Favoritos[/B][/COLOR]" , "" , 301 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B]Filmes Favoritos KelTec Play[/B] [B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nFilmes da TV.\n[B][COLOR orange]|[/COLOR][/B] KelTec Media'Play [B][COLOR orange]|[/COLOR][/B]" )
 oo0OooOOo0 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orange]|[/COLOR] [/COLOR][COLOR silver]Séries Favoritas [/B][/COLOR]" , "" , 302 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B]Séries Favoritas KelTec Play[/B] [B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nSéries da TV.\n[B][COLOR orange]|[/COLOR][/B] KelTec Media'Play [B][COLOR orange]|[/COLOR][/B]" )
 oo0OooOOo0 ( "[B][COLOR silver]Limpar Histórico & Check Update[/COLOR][/B]" , "" , 54 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = False , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B]Limpar e Checar![/B] [B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\n[B][COLOR orange]|[/COLOR][/B] Limpar Hitóricos Favoritos [B][COLOR orange]|[/COLOR][/B]\r\n[B][COLOR orange]|[/COLOR][/B] Versão atual: [B][COLOR orange]|[/COLOR][/B]" + OO0o )
 if 92 - 92: Oo . iiI1i1 + OOO
 if 28 - 28: ii1I * oo00oOOo - OOO * OOo00O0Oo0oO * o0oo0o / Oooo000o
 if 94 - 94: ooO0OO000o % o0oo / OOo * OO0O0O
 if 54 - 54: OOO - III + iiiii
 if 70 - 70: o0oo0o / iiI1i1 . Oo % oo00oOOo
 if 67 - 67: OOo * OOO . OOo00O0Oo0oO - Oooo000o * OOO
def IIiI1I ( ) :
 O00Oo000ooO0 = common . OpenURL ( "https://pastebin.com/raw/" )
 OoO0O00 = re . compile ( '(.+);(.+)' ) . findall ( O00Oo000ooO0 )
 for IIiII , o0ooOooo000oOO in OoO0O00 :
  oo0OooOOo0 ( "[COLOR while][B][" + IIiII + "][/COLOR][/B]" , o0ooOooo000oOO , 102 , "https://i62.servimg.com/u/f62/19/82/45/70/family10.png" , "https://i62.servimg.com/u/f62/19/82/45/70/family10.png" )
 iiI1 ( )
def Oo0oOOo ( ) :
 if 58 - 58: ooO0OO000o * Ii11111i * o0oo / Ii11111i
 if 75 - 75: O00ooOO
 if 50 - 50: o0oo0o / oo00oOOo - O00ooOO - iiI1i1 % Oo - O00ooOO
 if 91 - 91: Oooo000o / iiI1i1 - ooO0OO000o . iiI1i1
 if 18 - 18: OOO
 oo0OooOOo0 ( "[B][COLOR white]Ultimos Adicionados[/COLOR][/B]" , "config" , 184 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True )
 oo0OooOOo0 ( "[B][COLOR white]Menu Geral de Filmes[/COLOR][/B]" , "config" , 180 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True )
 if 98 - 98: Oo * Oo / Oo + iiI1i1
 iiI1 ( )
 if 34 - 34: ooO00oOoo
def I1111I1iII11 ( ) :
 if 59 - 59: OO0O0O * i11iIiiIii / o0oo * ii1I * Iii1I1
 if 83 - 83: Oooo000o / iIi . OOo / OOo00O0Oo0oO . OOo . Ii11111i
 if 75 - 75: iiI1i1 + Oooo000o . OOo . ooO00oOoo + oo00oOOo . Oooo000o
 if 96 - 96: Ii11111i . ooO00oOoo - oo00oOOo + OO0O0O / OOo * Ii11111i
 if 65 - 65: o0oo0o . OO0O0O / Iii1I1 - o0oo0o
 oo0OooOOo0 ( "[B][COLOR white]Séries MMFilmes.tv[/COLOR][/B]" , "config" , 190 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True )
 iiI1 ( )
 if 21 - 21: III * OO0O0O
 if 91 - 91: OOo00O0Oo0oO
 if 15 - 15: ooO0OO000o
 if 18 - 18: i11iIiiIii . ii1I % iiiii / Iii1I1
def OO0OoO0o00 ( msg ) :
 ooOO0O0ooOooO = xbmcgui . Dialog ( )
 O00Oo000ooO0 = ooOO0O0ooOooO . select ( '[B][COLOR white]SUPORTE[/COLOR] [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR][COLOR white] OFICIAL[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] SITE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] AJUDAR PROJETO' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] [COLOR orange]TOP VIP [/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] FACEBOOK' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] YOUTUBE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] TELEGRAM' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] ENTRAR NO ADD-ON' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] SAIR' ] )
 if 55 - 55: OOO * OOo
 if O00Oo000ooO0 == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://keltecmp.net/' ) )
  else :
   o0O00oOoOO = webbrowser . open ( 'https://keltecmp.net/' )
   if 42 - 42: Oooo000o
 if O00Oo000ooO0 == 1 :
  o0o ( True )
  if 84 - 84: Iii1I1
 if O00Oo000ooO0 == 2 :
  OOOooOO0 ( True )
  if 87 - 87: O00ooOO * o0oo + Ii11111i / OO0O0O / Oo
 if O00Oo000ooO0 == 3 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://fb.com/groups/KelTec.Media.Play/' ) )
  else :
   o0O00oOoOO = webbrowser . open ( 'https://fb.com/groups/KelTec.Media.Play/' )
   if 37 - 37: Oo - ooO00oOoo * O00ooOO % i11iIiiIii - iIi
 if O00Oo000ooO0 == 4 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   o0O00oOoOO = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://bit.ly/Inscrever-se-KelTec-Media-Play' ) )
  else :
   webbrowser . open ( 'https://bit.ly/Inscrever-se-KelTec-Media-Play' )
   if 83 - 83: iiI1i1 / III
 if O00Oo000ooO0 == 5 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   o0O00oOoOO = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://t.me/KelTec_MP' ) )
  else :
   o0O00oOoOO = webbrowser . open ( 'https://t.me/KelTec_MP' )
   if 34 - 34: OOo00O0Oo0oO
 if O00Oo000ooO0 == 6 :
  o0OOoo0OO0OOO ( True )
  iiI1 ( )
  if 57 - 57: O00ooOO . iiI1i1 . ii1I
 if O00Oo000ooO0 == 7 :
  xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
  xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
  if 42 - 42: iiI1i1 + o0oo % Iii1I1
  if 6 - 6: O00ooOO
def OOOooOO0 ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , 'O acesso [COLOR orange]Top Vip[/COLOR] é através de aplicativo exclusivo P2P somente!.\nPare de sofrer com travamentos, solicite agora mesmo no menu a seguir...' )
 ooOO0O0ooOooO = xbmcgui . Dialog ( )
 O00Oo000ooO0 = ooOO0O0ooOooO . select ( '[B][COLOR white]SUPORTE: [COLOR orange]TOP VIP[/COLOR] [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR][COLOR white] P2P EXCLUSIVO[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] TESTE TOP VIP' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] DETALHES TOP VIP' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] APLICATIVO P2P ANDROID' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] APLICATIVO IPTV ANDROID' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] CONTINUAR NO ADD-ON' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] SAIR DO ADD-ON' ] )
 if 68 - 68: OOo - Oooo000o
 if O00Oo000ooO0 == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://bit.ly/teste_site' ) )
  else :
   o0O00oOoOO = webbrowser . open ( 'http://bit.ly/teste_site' )
   if 28 - 28: Oooo000o . Ii11111i / Ii11111i + oo00oOOo . o0oo
 if O00Oo000ooO0 == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   o0O00oOoOO = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://bit.ly/site-vip' ) )
  else :
   webbrowser . open ( 'http://bit.ly/site-vip' )
   if 1 - 1: OO0O0O / ooO0OO000o
 if O00Oo000ooO0 == 2 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   o0O00oOoOO = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://bit.ly/P2P_APK' ) )
  else :
   webbrowser . open ( 'https://bit.ly/P2P_APK' )
   if 33 - 33: iiI1i1
 if O00Oo000ooO0 == 3 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   o0O00oOoOO = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://bit.ly/IPTV-TOP-VIP' ) )
  else :
   webbrowser . open ( 'https://bit.ly/IPTV-TOP-VIP' )
   if 18 - 18: OOO % Oo * Iii1I1
   if 87 - 87: i11iIiiIii
def OO0Oooo0 ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , 'Bem-Vindos!\nAqui temos nosso site oficial para downloads\nNosso canal no YouTube para tutoriais KelTec Media-Play\nNossos Grupos no Facebook e Telegram, para suporte' )
 ooOO0O0ooOooO = xbmcgui . Dialog ( )
 O00Oo000ooO0 = ooOO0O0ooOooO . select ( '[B][COLOR white]SUPORTE [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR] [COLOR white]OFICIAL[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] SITE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] FACEBOOK' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] YOUTUBE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] TELEGRAM' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] VOLTAR' ] )
 if 62 - 62: Iii1I1 * ii1I * OOO - III + III
 if O00Oo000ooO0 == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://keltecmp.net/' ) )
  else :
   o0O00oOoOO = webbrowser . open ( 'https://keltecmp.net/' )
   if 34 - 34: OO0O0O - OOO
 if O00Oo000ooO0 == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://fb.com/groups/KelTec.Media.Play/' ) )
  else :
   o0O00oOoOO = webbrowser . open ( 'https://fb.com/groups/KelTec.Media.Play/' )
   if 91 - 91: Oo % ii1I % OO0O0O
 if O00Oo000ooO0 == 2 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   o0O00oOoOO = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://bit.ly/Inscrever-se-KelTec-Media-Play' ) )
  else :
   webbrowser . open ( 'https://bit.ly/Inscrever-se-KelTec-Media-Play' )
   if 20 - 20: Ii11111i % o0oo0o / o0oo0o + o0oo0o
 if O00Oo000ooO0 == 3 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   o0O00oOoOO = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://t.me/KelTec_MP' ) )
  else :
   o0O00oOoOO = webbrowser . open ( 'https://t.me/KelTec_MP' )
   if 45 - 45: O00ooOO - OOo00O0Oo0oO - iiiii - Oooo000o . ooO0OO000o / Iii1I1
def o0o ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orange]|[/COLOR][/B]  Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orange]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
 ooOO0O0ooOooO = xbmcgui . Dialog ( )
 O00Oo000ooO0 = ooOO0O0ooOooO . select ( '[B][COLOR white]AJUDAR [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR][COLOR white] PROJETO[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] [COLOR white]DOAÇÃO[/COLOR] [COLOR blue]PAY[/COLOR][COLOR white]PAL[/COLOR] [COLOR orange]$Livre[/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] [COLOR white]DOAÇÃO MP[/COLOR] [COLOR orange]$10[/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] [COLOR green]DOAÇÃO PICPAY[/COLOR] [COLOR orange]$Livre[/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] [COLOR green]DOAÇÃO CONVITE PICPAY[/COLOR] [COLOR orange]$10[/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orange] |[/COLOR] VOLTAR' ] )
 if 51 - 51: Iii1I1 + Oo
 if O00Oo000ooO0 == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orange]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orange]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://bit.ly/Doar_Paypal' ) )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orange]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orange]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   o0O00oOoOO = webbrowser . open ( 'https://bit.ly/Doar_Paypal' )
   if 8 - 8: O00ooOO * OOo - o0oo0o - Oooo000o * Ii11111i % III
 if O00Oo000ooO0 == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orange]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orange]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://bit.ly/DOAR_10_KELTEC_MEDIA_PLAY' ) )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orange]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orange]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   o0O00oOoOO = webbrowser . open ( 'http://bit.ly/DOAR_10_KELTEC_MEDIA_PLAY' )
   if 48 - 48: Iii1I1
 if O00Oo000ooO0 == 2 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orange]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orange]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://app.picpay.com/user/keltec_media_play/' ) )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orange]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orange]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   o0O00oOoOO = webbrowser . open ( 'https://app.picpay.com/user/keltec_media_play/' )
   if 11 - 11: iiI1i1 + iiiii - Oooo000o / OOO + oo00oOOo . ooO0OO000o
 if O00Oo000ooO0 == 3 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orange]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orange]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://picpay.com/convite?@8GNDLD' ) )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B]'
love = ''
god = 'O00Ooo [ 0 ]
   if len ( O00Ooo ) > 1 :
    O00Ooo [ 1 ] = "http://www.redecanais.cz/" + O00Ooo [ 1 ] if "http" not in O00Ooo [ 1 ] else O00Ooo [ 1 ]
    oo0OooOOo0 ( "[COLOR gold][Dub][/COLOR] " + IIi1IIIi + " " + OOOO0OOO , O00Ooo [ 0 ] , 133 , OOoO , OOoO , info = "" , isFolder = False , IsPlayable = True )
    oo0OooOOo0 ( "[COLOR silver][Leg][/COLOR] " + IIi1IIIi + " " + OOOO0OOO , O00Ooo [ 1 ] , 133 , OOoO , OOoO , info = "" , isFolder = False , IsPlayable = True )
   elif O00Ooo :
    oo0OooOOo0 ( IIi1IIIi + " " + OOOO0OOO , O00Ooo [ 0 ] , 133 , OOoO , OOoO , info = "" , isFolder = False , IsPlayable = True )
def i1i1ii ( urlrc , pagina2 ) :
 try :
  iIiIi11iI ( "cOrdRCS" )
  iII1ii1 = eval ( pagina2 )
  o0OO0o0oOOO0O = 1
  if int ( iII1ii1 ) > 0 :
   oo0OooOOo0 ( "[COLOR silver][B]<< Pagina Anterior [" + str ( int ( iII1ii1 ) ) + "[/B]][/COLOR]" , iII1ii1 , 120 , "https://i97.servimg.com/u/f97/19/82/45/70/url10.png" , isFolder = False , background = pagina2 )
  iI = int ( iII1ii1 ) * 5
  for OO0Oooo0oOO0O in range ( 0 , 5 ) :
   iI += 1
   O00Oo000ooO0 = common . OpenURL ( "http://www.redecanais.cz/browse-" + urlrc + "-videos-" + str ( iI ) + "-" + OooO0OO + ".html" )
   OoO0O00 = re . compile ( 'href=\"([^\"]+).{70,90}src=\"([^\"]+)\".alt=\"([^\"]+)' ) . findall ( O00Oo000ooO0 )
   if OoO0O00 :
    for o0ooOooo000oOO , Ooo0OOoOoO0 , IIiII in OoO0O00 :
     o0ooOooo000oOO = re . sub ( '^\.' , "http://www.redecanais.cz/" , o0ooOooo000oOO )
     if not "index.html" in o0ooOooo000oOO :
      oo0OooOOo0 ( IIiII , o0ooOooo000oOO , 135 , Ooo0OOoOoO0 , Ooo0OOoOoO0 , info = "" )
      o0OO0o0oOOO0O += 1
   else :
    break
  if o0OO0o0oOOO0O >= 60 :
   oo0OooOOo0 ( "[COLOR silver][B]Proxima Pagina >> [" + str ( int ( iII1ii1 ) + 2 ) + "[/B]][/COLOR]" , iII1ii1 , 110 , "http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png" , isFolder = False , background = pagina2 )
 except urllib2 . URLError , iI111i :
  oo0OooOOo0 ( "Server error, tente novamente em alguns minutos" , oooOo0OOOoo0 , 0 , "" , "" )
def I1i1iiiI1 ( ) :
 O00Oo000ooO0 = common . OpenURL ( oooOo0OOOoo0 )
 OoO0O00 = re . compile ( '<strong>(E.+?)<\/strong>(.+?)(<br|<\/p)' ) . findall ( O00Oo000ooO0 )
 oooi1i1iI1iiiI = 0
 if OoO0O00 :
  for IIiII , o0ooOooo000oOO , oO00O0 in OoO0O00 :
   IIi1IIIi = re . compile ( '\d+' ) . findall ( IIiII )
   if IIi1IIIi :
    IIi1IIIi = IIi1IIIi [ 0 ]
    if int ( IIi1IIIi ) == 1 :
     oooi1i1iI1iiiI = oooi1i1iI1iiiI + 1
   else :
    IIi1IIIi = IIiII
    if 24 - 24: O00ooOO / i11iIiiIii + O00ooOO
   O00Ooo = re . compile ( 'href\=\"(.+?)\"' ) . findall ( o0ooOooo000oOO )
   try :
    OOOO0OOO = re . sub ( '&([^;]+);' , lambda iI1Ii11iIiI1 : unichr ( htmlentitydefs . name2codepoint [ iI1Ii11iIiI1 . group ( 1 ) ] ) , re . compile ( '([^\-]+)' ) . findall ( o0ooOooo000oOO ) [ 0 ] ) . encode ( 'utf-8' )
   except :
    OOOO0OOO = re . compile ( '([^\-]+)' ) . findall ( o0ooOooo000oOO ) [ 0 ]
   if "<" in OOOO0OOO :
    OOOO0OOO = ""
   if O00Ooo :
    if "http" not in O00Ooo [ 0 ] :
     O00Ooo [ 0 ] = "http://www.redecanais.cz/" + O00Ooo [ 0 ]
   if len ( O00Ooo ) > 1 :
    if "http" not in O00Ooo [ 1 ] :
     O00Ooo [ 1 ] = "http://www.redecanais.cz/" + O00Ooo [ 1 ]
    oo0OooOOo0 ( "[COLOR gold][Dub][/COLOR] S" + str ( oooi1i1iI1iiiI ) + " E" + IIi1IIIi + " " + OOOO0OOO , O00Ooo [ 0 ] , 133 , OOoO , OOoO , info = "" , isFolder = False , IsPlayable = True )
    oo0OooOOo0 ( "[COLOR silver][Leg][/COLOR] S" + str ( oooi1i1iI1iiiI ) + " E" + IIi1IIIi + " " + OOOO0OOO , O00Ooo [ 1 ] , 133 , OOoO , OOoO , info = "" , isFolder = False , IsPlayable = True )
   elif O00Ooo :
    oo0OooOOo0 ( "S" + str ( oooi1i1iI1iiiI ) + " E" + IIi1IIIi + " " + OOOO0OOO , O00Ooo [ 0 ] , 133 , OOoO , OOoO , info = "" , isFolder = False , IsPlayable = True )
    if 20 - 20: iiI1i1 + o0oo0o / Iii1I1 % OO0O0O
    if 88 - 88: OOo / ooO0OO000o
def OOOOO0O00 ( ) :
 oo0OooOOo0 ( "[COLOR withe][B][Nova Busca][/B][/COLOR]" , "" , 50 , "" , isFolder = False )
 I1i111I = xbmcgui . Dialog ( ) . input ( "Busca (poder demorar a carregar os resultados)" ) . replace ( " " , "+" )
 if not I1i111I :
  return o0OOoo0OO0OOO ( True )
  sys . exit ( int ( sys . argv [ 1 ] ) )
  if 30 - 30: OO0O0O . III . Ii11111i / OOO
  if 42 - 42: oo00oOOo
  if 19 - 19: O00ooOO % o0oo * OO0O0O + III
  if 46 - 46: oo00oOOo
  if 1 - 1: Oo
  if 97 - 97: Ii11111i + Oo + Iii1I1 + i11iIiiIii
  if 77 - 77: OOO / iiiii
  if 46 - 46: OOO % OO0O0O . Oo % Oo + i11iIiiIii
  if 72 - 72: OO0O0O * o0oo0o % ooO00oOoo / Oooo000o
  if 35 - 35: ooO00oOoo + ii1I % o0oo % iiI1i1 + O00ooOO
  if 17 - 17: ii1I
  if 21 - 21: oo00oOOo
  if 29 - 29: iiI1i1 / ooO0OO000o / ooO00oOoo * Ii11111i
  if 10 - 10: iIi % OOo00O0Oo0oO * OOo00O0Oo0oO . iiI1i1 / o0oo0o % Ii11111i
  if 49 - 49: Oooo000o / O00ooOO + Iii1I1 * OOO
 iI = 0
 I1iIIiiIIi1i = 0
 try :
  oo0OooOOo0 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play: [/COLOR][COLOR silver]Filmes & Séries[/B][/COLOR]" , "" , 0 , "" , isFolder = False )
  I1ii11 = common . OpenURL ( "http://www.mmfilmes.tv/series/" )
  oOoOoOoo0 = re . compile ( 'href\=\"(.+www.mmfilmes.tv.+)\" rel\=\"bookmark\"' ) . findall ( I1ii11 )
  for OO0Oooo0oOO0O in range ( 0 , 3 ) :
   iI += 1
   O00Oo000ooO0 = common . OpenURL ( "http://www.mmfilmes.tv/page/" + str ( iI ) + "/?s=" + I1i111I )
   iI1Ii11iIiI1 = re . compile ( 'id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)' ) . findall ( O00Oo000ooO0 )
   III1ii1I = re . compile ( 'audioy..([^\<]*)' ) . findall ( O00Oo000ooO0 )
   Ii1i1iI = re . compile ( 'src=\"(http.+?www.mmfilmes.tv\/wp-content\/uploads[^\"]+)' ) . findall ( O00Oo000ooO0 )
   I1III1111iIi = re . compile ( 'boxxer.+\s.+boxxer..([^\<]*)' ) . findall ( O00Oo000ooO0 )
   if iI1Ii11iIiI1 :
    for IIiII , I1ii1ii11i1I , o0ooOooo000oOO in iI1Ii11iIiI1 :
     IIiII = IIiII . replace ( "&#8211;" , "-" ) . replace ( "&#038;" , "&" ) . replace ( "&#8217;" , "\'" )
     if not o0ooOooo000oOO in oOoOoOoo0 :
      oo0OooOOo0 ( IIiII + " [COLOR glod]" + III1ii1I [ I1iIIiiIIi1i ] + "[/COLOR] [COLOR orange]" + I1III1111iIi [ I1iIIiiIIi1i ] + "[/COLOR]" , o0ooOooo000oOO , 181 , Ii1i1iI [ I1iIIiiIIi1i ] , Ii1i1iI [ I1iIIiiIIi1i ] , isFolder = True , IsPlayable = False )
     else :
      oo0OooOOo0 ( IIiII , o0ooOooo000oOO , 191 , Ii1i1iI [ I1iIIiiIIi1i ] , Ii1i1iI [ I1iIIiiIIi1i ] , isFolder = True , IsPlayable = False )
     I1iIIiiIIi1i += 1
   I1iIIiiIIi1i = 0
 except :
  pass
 iI = 0
 I1iIIiiIIi1i = 0
 try :
  if 16 - 16: Ii11111i / oo00oOOo / iiiii * III + ii1I % Ii11111i
  for OO0Oooo0oOO0O in range ( 0 , 3 ) :
   iI += 1
   O00Oo000ooO0 = common . OpenURL ( "http://gofilmes.me/search?s=" + I1i111I + "&p=" + str ( iI ) ) . replace ( "</div><div" , "\r\n" )
   iI1Ii11iIiI1 = re . compile ( 'href=\"([^\"]+)\" title\=\"([^\"]+).+b\" src\=\"([^\"]+).+' ) . findall ( O00Oo000ooO0 )
   for o0ooOooo000oOO , IIiII , Ooo0OOoOoO0 in iI1Ii11iIiI1 :
    oo0OooOOo0 ( IIiII , o0ooOooo000oOO , 211 , Ooo0OOoOoO0 , Ooo0OOoOoO0 , isFolder = False , IsPlayable = True )
 except :
  pass
  if 71 - 71: OOo
  if 14 - 14: i11iIiiIii % Ii11111i
def OooO0oo ( x ) :
 try :
  if 89 - 89: o0oo0o
  O00Oo000ooO0 = common . OpenURL ( "https://pastebin.com/raw/" + x )
  iI1Ii11iIiI1 = re . compile ( '(.+)\?(.+)' ) . findall ( O00Oo000ooO0 )
  I1iIIiiIIi1i = 0
  for IIiII , o0ooOooo000oOO in iI1Ii11iIiI1 :
   if oOOoo00O0O == "8080" :
    oo0OooOOo0 ( ooOoOO0OoO00o ( IIiII ) , o0ooOooo000oOO , 103 , "a" , "a" , isFolder = False , IsPlayable = True , info = "" )
    I1iIIiiIIi1i += 1
   elif not "dulto" in ooOoOO0OoO00o ( IIiII ) :
    oo0OooOOo0 ( ooOoOO0OoO00o ( IIiII ) , o0ooOooo000oOO , 103 , "a" , "a" , isFolder = False , IsPlayable = True , info = "" )
    I1iIIiiIIi1i += 1
 except :
  oo0OooOOo0 ( "Servidor offline, tente novamente em alguns minutos" , "" , 0 , "" , "" , 0 )
def II1iiiiII ( ) :
 try :
  iIiIi11 ( OOOiiiiI , ooOoOO0OoO00o ( oooOo0OOOoo0 ) , "" , "" , "" )
 except urllib2 . URLError , iI111i :
  xbmcgui . Dialog ( ) . ok ( 'KelTec Play' , "Servidor offline, tente novamente em alguns minutos" )
  if 61 - 61: Oo % III - OOO - ooO0OO000o % Iii1I1
  if 90 - 90: OO0O0O + o0oo + ooO00oOoo - iIi * OOo00O0Oo0oO . o0oo
def I11iiiii1II ( x ) :
 x = x . replace ( "\xe7" , "ç" ) . replace ( "\xe0" , "à" ) . replace ( "\xe1" , "á" ) . replace ( "\xe2" , "â" ) . replace ( "\xe3" , "ã" ) . replace ( "\xe8" , "è" ) . replace ( "\xe9" , "é" ) . replace ( "\xea" , "ê" ) . replace ( "\xed" , "í" ) . replace ( "\xf3" , "ó" ) . replace ( "\xf4" , "ô" ) . replace ( "\xf5" , "õ" ) . replace ( "\xfa" , "ú" )
 return x
def ooOOooOo0O ( ) :
 I1i111iiIIIi = "{"
 try :
  xbmc . executebuiltin ( "Notification({0}, {1}, 7000, {2})" . format ( iI1 , "Carregando lista EPG. Aguarde um momento!" , i1I11i ) )
  O00Oo000ooO0 = common . OpenURL ( "http://www.epg.com.br/~mysql41/vertv.php" ) . replace ( '	' , '' )
  iI1Ii11iIiI1 = re . compile ( 'javascript:toggleCanal\(\d+,.([^\']+)\h*(?s)(.+?)\<\!-- orig' ) . findall ( O00Oo000ooO0 )
  for O00 , I11ii1i1 in iI1Ii11iIiI1 :
   ooo0OoOOOOO = ""
   oooO = re . compile ( '(.+)(\(\d+.\d+\))\s' ) . findall ( I11ii1i1 )
   if oooO :
    for i1iIi1iI , i1I11IiI1iiII in oooO :
     ooo0OoOOOOO += i1I11IiI1iiII + " " + i1iIi1iI + ";;;"
     try :
      ooo0OoOOOOO = I11iiiii1II ( ooo0OoOOOOO )
     except :
      ooo0OoOOOOO = ooo0OoOOOOO
   ooo0OoOOOOO = ooo0OoOOOOO . replace ( "'" , "" )
   I1i111iiIIIi += "'" + O00 + "' : '" + ooo0OoOOOOO + "' , "
  return I1i111iiIIIi + "'none':''}"
 except urllib2 . URLError , iI111i :
  return ""
  xbmc . executebuiltin ( "Notification({0}, {1}, 7000, {2})" . format ( iI1 , "Erro. tente novamente!" , i1I11i ) )
def o00oOo0oOoo ( ) :
 O00Oo000ooO0 = urllib2 . urlopen ( "http://KelTecPlay-iptv.directorioforuns.com/h64-" ) . read ( ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
 OoO0O00 = re . compile ( 'url="(.+?)".+?mg="(.+?)".+?ame="(.+?)"' ) . findall ( O00Oo000ooO0 )
 for o0ooOooo000oOO , Ooo0OOoOoO0 , IIiII in OoO0O00 :
  if oOOoo00O0O == "8080" :
   oo0OooOOo0 ( IIiII , o0ooOooo000oOO , 101 , Ooo0OOoOoO0 , Ooo0OOoOoO0 , isFolder = False , IsPlayable = True , info = "" )
  elif not "dulto" in IIiII :
   oo0OooOOo0 ( IIiII , o0ooOooo000oOO , 101 , Ooo0OOoOoO0 , Ooo0OOoOoO0 , isFolder = False , IsPlayable = True , info = "" )
def oOOO0o00o ( ) :
 o0ooOooo000oOO = re . sub ( 'redecanais\.[^\/]+' , "redecanais.cz" , oooOo0OOOoo0 . replace ( "https" , "http" ) )
 try :
  O00Oo000ooO0 = common . OpenURL ( oooOo0OOOoo0 )
  o0O0oo0OO0O = re . compile ( '<iframe name=\"Player\".+src=\"([^\"]+)\"' ) . findall ( O00Oo000ooO0 )
  ii1 = common . OpenURL ( o0O0oo0OO0O [ 0 ] )
  oooO = re . compile ( 'action="([^\"]+)' ) . findall ( ii1 )
  IIOOO0O00O0OOOO = common . OpenURL ( oooO [ 0 ] )
  iI11 = re . compile ( '(http[^\"]+m3u[^\"]+)' ) . findall ( IIOOO0O00O0OOOO )
  if iI11 :
   iIiIi11 ( OOOiiiiI , iI11 [ 0 ] + "?play|Referer=" + o0O0oo0OO0O [ 0 ] , OOoO , OO0O000 )
  else :
   xbmcgui . Dialog ( ) . ok ( 'KelTec Play' , "Erro, aguarde atualização" )
 except urllib2 . URLError , iI111i :
  xbmcgui . Dialog ( ) . ok ( 'KelTec Play' , 'Erro, tente novamente em alguns minutos' )
  if 96 - 96: Ii11111i
  if 85 - 85: OOO . OOo / ooO00oOoo . Iii1I1 % iIi
def OO0ooo0oOO ( ) :
 I1i111I = xbmcgui . Dialog ( ) . select ( "Escolha o Genero" , O0O )
 if I1i111I != - 1 :
  global oOoO
  oOooOoO0Oo0O . setSetting ( "Catfo" , str ( I1i111I ) )
  oOoO = I1i111I
  oOooOoO0Oo0O . setSetting ( "cPagefo1" , "0" )
  xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
  if 97 - 97: III / Oo
def Oooo0 ( urlfo , pagina2 ) :
 oo0OooOOo0 ( "[COLOR yellow][B][Gênero dos Filmes]:[/B] " + O0O [ int ( oOo ) ] + "[/COLOR]" , "url" , 85 , "http://icons.iconarchive.com/icons/johanchalibert/mac-osx-yosemite/1024/system-preferences-icon.png" , "http://icons.iconarchive.com/icons/johanchalibert/mac-osx-yosemite/1024/system-preferences-icon.png" , isFolder = False )
 iIiIi11iI ( "cOrdFO" )
 try :
  iII1ii1 = eval ( pagina2 )
  iI = int ( iII1ii1 ) * 5
  o0OO0o0oOOO0O = 1
  if int ( iII1ii1 ) > 0 :
   oo0OooOOo0 ( "[COLOR silver][B]<< Pagina Anterior [" + str ( int ( iII1ii1 ) ) + "[/B]][/COLOR]" , iII1ii1 , 120 , "https://i97.servimg.com/u/f97/19/82/45/70/url10.png" , isFolder = False , background = pagina2 )
  for OO0Oooo0oOO0O in range ( 0 , 5 ) :
   iI += 1
   oOO = "desc" if oOoOo00oOo == "1" else "asc"
   O00Oo000ooO0 = common . OpenURL ( "https://filmesonline.online/index.php?do=search&subaction=search&search_start=" + str ( iI ) + "&story=" + urlfo + "&sortby=" + oOoOo00oOo + "&resorder=" + oOO + "&catlist[]=" + Oo00OOOOO [ int ( oOo ) ] ) . replace ( "\r" , "" ) . replace ( "\n" , "" )
   O00Oo000ooO0 = re . sub ( 'Novos Filmes.+' , '' , O00Oo000ooO0 )
   iI1Ii11iIiI1 = re . compile ( 'src=\"(.upload[^\"]+).+?alt=\"([^\"]+).+?href=\"([^\"]+)' ) . findall ( O00Oo000ooO0 )
   oooO = re . compile ( 'numb-serial..(.+?)\<.+?afd..(\d+)' ) . findall ( O00Oo000ooO0 )
   I1iIIiiIIi1i = 0
   if iI1Ii11iIiI1 :
    if 54 - 54: III / OO0O0O / Ii11111i . Ii11111i % Oo . III
    for Ooo0OOoOoO0 , IIiII , o0ooOooo000oOO in iI1Ii11iIiI1 :
     oo0OooOOo0 ( IIiII + " (" + oooO [ I1iIIiiIIi1i ] [ 0 ] + ") - " + oooO [ I1iIIiiIIi1i ] [ 1 ] , o0ooOooo000oOO , 171 , "https://filmesonline.online/" + Ooo0OOoOoO0 , "https://filmesonline.online/" + Ooo0OOoOoO0 , info = "" , background = oooOo0OOOoo0 )
     o0OO0o0oOOO0O += 1
     I1iIIiiIIi1i += 1
  if o0OO0o0oOOO0O >= 80 :
   oo0OooOOo0 ( "[COLOR silver][B]Proxima Pagina >> [" + str ( int ( iII1ii1 ) + 2 ) + "[/B]][/COLOR]" , iII1ii1 , 110 , "https://i97.servimg.com/u/f97/19/82/45/70/proxim10.png" , isFolder = False , background = pagina2 )
 except urllib2 . URLError , iI111i :
  oo0OooOOo0 ( "Server error, tente novamente em alguns minutos" , "" , 0 , "" , "" )
  if 10 - 10: OOO + Ii11111i
def IIII1i ( ) :
 if re . compile ( '\d+' ) . findall ( str ( o0Oo0oO0oOO00 ) ) :
  Ii1IIIIi1ii1I = o0Oo0oO0oOO00 . split ( "," )
  IiiIiI1Ii1i = xbmcgui . Dialog ( ) . select ( "Selecione a resolucão" , Ii1IIIIi1ii1I )
  if IiiIiI1Ii1i != - 1 :
   O00Oo000ooO0 = common . OpenURL ( oooOo0OOOoo0 + "?q=" + Ii1IIIIi1ii1I [ IiiIiI1Ii1i ] )
   iI1Ii11iIiI1 = re . compile ( 'https[^\"]+\.mp4' ) . findall ( O00Oo000ooO0 )
   if 22 - 22: OOo00O0Oo0oO / i11iIiiIii
   o0Oo0oO0oOO00 = "None"
   iIiIi11 ( OOOiiiiI , iI1Ii11iIiI1 [ 0 ] , "" , OO0O000 )
 else :
  O00Oo000ooO0 = common . OpenURL ( oooOo0OOOoo0 )
  iI1Ii11iIiI1 = re . compile ( 'https[^\"]+\.mp4' ) . findall ( O00Oo000ooO0 )
  o0Oo0oO0oOO00 = "None"
  iIiIi11 ( OOOiiiiI , iI1Ii11iIiI1 [ 0 ] , "" , OO0O000 )
  if 62 - 62: Oooo000o / o0oo
def ii1O000OOO0OOo ( ) :
 try :
  O00Oo000ooO0 = common . OpenURL ( oooOo0OOOoo0 )
  iI1Ii11iIiI1 = re . compile ( 'href\=\"(.+?\#Rapid)' ) . findall ( O00Oo000ooO0 )
  i1i1I111iIi1 = re . compile ( 'class=\"titleblock\"\>\s\<h1\>([^\<]+)' ) . findall ( O00Oo000ooO0 )
  I1iIIiiIIi1i = re . compile ( 'class=\"p-info-text\"\>\s\<span\>([^\<]+)' ) . findall ( O00Oo000ooO0 )
  if iI1Ii11iIiI1 :
   ii1 = common . OpenURL ( "https://filmesonline.online" + iI1Ii11iIiI1 [ 0 ] )
   oooO = re . compile ( 'iframe.+?src\=\"([^\"]+)' ) . findall ( ii1 )
   if oooO :
    oo00O00oO000o = i1i1I111iIi1 [ 0 ] if i1i1I111iIi1 else OOOiiiiI
    OO0O000 = I1iIIiiIIi1i [ 0 ] if I1iIIiiIIi1i else ""
    IIOOO0O00O0OOOO = common . OpenURL ( "https:" + oooO [ 0 ] )
    i1I1i111Ii = re . compile ( 'https[^\"]+\.mp4' ) . findall ( IIOOO0O00O0OOOO )
    if i1I1i111Ii :
     OOo00OoO = re . compile ( 'q=(\d+p)' ) . findall ( IIOOO0O00O0OOOO )
     OOo00OoO = list ( reversed ( OOo00OoO ) )
     oo0OooOOo0 ( oo00O00oO000o , "https:" + oooO [ 0 ] , 172 , OOoO , OOoO , isFolder = False , IsPlayable = True , info = OO0O000 , background = "," . join ( OOo00OoO ) )
     oo0OooOOo0 ( "Resolucões: " + ", " . join ( OOo00OoO ) , "https:" + oooO [ 0 ] , 0 , OOoO , OOoO , isFolder = False , info = "Clique no titulo do filme para dar play" )
    else :
     oo0OooOOo0 ( "Video offline!!" , "" , 0 , "" , "" , isFolder = False )
 except urllib2 . URLError , iI111i :
  oo0OooOOo0 ( "Video offline" , "" , 0 , "" , "" , isFolder = False )
  if 10 - 10: OOO / i11iIiiIii
  if 92 - 92: iiI1i1 . iIi
def oOO00O0Ooooo00 ( ) :
 I1i111I = xbmcgui . Dialog ( ) . select ( "Escolha o Genero" , I11i1 )
 if I1i111I != - 1 :
  global oOoO
  oOooOoO0Oo0O . setSetting ( "CatMM" , str ( I1i111I ) )
  oOoO = I1i111I
  oOooOoO0Oo0O . setSetting ( "cPageMMf" , "0" )
  xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
def O000 ( ) :
 iI = 0
 I1iIIiiIIi1i = 0
 try :
  I1ii11 = common . OpenURL ( "http://www.mmfilmes.tv/series/" )
  oOoOoOoo0 = re . compile ( 'href\=\"(.+www.mmfilmes.tv.+)\" rel\=\"bookmark\"' ) . findall ( I1ii11 )
  for OO0Oooo0oOO0O in range ( 0 , 5 ) :
   iI += 1
   O00Oo000ooO0 = common . OpenURL ( "http://www.mmfilmes.tv/ultimos/page/" + str ( iI ) + "/" )
   iI1Ii11iIiI1 = re . compile ( 'id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)' ) . findall ( O00Oo000ooO0 )
   III1ii1I = re . compile ( 'audioy..([^\<]*)' ) . findall ( O00Oo000ooO0 )
   Ii1i1iI = re . compile ( 'src=\"(http.+?www.mmfilmes.tv\/wp-content\/uploads[^\"]+)' ) . findall ( O00Oo000ooO0 )
   I1III1111iIi = re . compile ( 'boxxer.+\s.+boxxer..([^\<]*)' ) . findall ( O00Oo000ooO0 )
   if iI1Ii11iIiI1 :
    for IIiII , I1ii1ii11i1I , o0ooOooo000oOO in iI1Ii11iIiI1 :
     IIiII = IIiII . replace ( "&#8211;" , "-" ) . replace ( "&#038;" , "&" ) . replace ( "&#8217;" , "\'" )
     if not o0ooOooo000oOO in oOoOoOoo0 :
      oo0OooOOo0 ( IIiII + " [COLOR gold]" + III1ii1I [ I1iIIiiIIi1i ] + "[/COLOR] [COLOR silver]" + I1III1111iIi [ I1iIIiiIIi1i ] + "[/COLOR]" , o0ooOooo000oOO , 181 , Ii1i1iI [ I1iIIiiIIi1i ] , Ii1i1iI [ I1iIIiiIIi1i ] , isFolder = True , IsPlayable = False )
     I1iIIiiIIi1i += 1
   I1iIIiiIIi1i = 0
 except :
  pass
  if 79 - 79: iiiii - III
def o00O00oO00 ( pagina2 ) :
 oo0OooOOo0 ( "[COLOR yellow][B][Gênero dos Filmes]:[/B] " + I11i1 [ int ( oOoOoO ) ] + "[/COLOR]" , "url" , 189 , "http://icons.iconarchive.com/icons/johanchalibert/mac-osx-yosemite/1024/system-preferences-icon.png" , "http://icons.iconarchive.com/icons/johanchalibert/mac-osx-yosemite/1024/system-preferences-icon.png" , isFolder = False )
 iII1ii1 = eval ( pagina2 )
 iI = int ( iII1ii1 ) * 5
 o0OO0o0oOOO0O = 1
 I1iIIiiIIi1i = 0
 if int ( iII1ii1 ) > 0 :
  oo0OooOOo0 ( "[COLOR silver][B]<< Pagina Anterior [" + str ( int ( iII1ii1 ) ) + "[/B]][/COLOR]" , iII1ii1 , 120 , "https://i97.servimg.com/u/f97/19/82/45/70/url10.png" , isFolder = False , background = pagina2 )
 try :
  I1ii11 = common . OpenURL ( "http://www.mmfilmes.tv/series/" )
  oOoOoOoo0 = re . compile ( 'href\=\"(.+www.mmfilmes.tv.+)\" rel\=\"bookmark\"' ) . findall ( I1ii11 )
  for OO0Oooo0oOO0O in range ( 0 , 5 ) :
   iI += 1
   O00Oo000ooO0 = common . OpenURL ( "http://www.mmfilmes.tv/category/" + O00o0OO [ int ( oOoOoO ) ] + "/page/" + str ( iI ) + "/" )
   iI1Ii11iIiI1 = re . compile ( 'id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)' ) . findall ( O00Oo000ooO0 )
   III1ii1I = re . compile ( 'audioy..([^\<]*)' ) . findall ( O00Oo000ooO0 )
   Ii1i1iI = re . compile ( 'src=\"(http.+?www.mmfilmes.tv\/wp-content\/uploads[^\"]+)' ) . findall ( O00Oo000ooO0 )
   I1III1111iIi = re . compile ( 'boxxer.+\s.+boxxer..([^\<]*)' ) . findall ( O00Oo000ooO0 )
   if iI1Ii11iIiI1 :
    for IIiII , I1ii1ii11i1I , o0ooOooo000oOO in iI1Ii11iIiI1 :
     IIiII = IIiII . replace ( "&#8211;" , "-" ) . replace ( "&#038;" , "&" ) . replace ( "&#8217;" , "\'" )
     if not o0ooOooo000oOO in oOoOoOoo0 :
      oo0OooOOo0 ( IIiII + " [COLOR gold]" + III1ii1I [ I1iIIiiIIi1i ] + "[/COLOR] [COLOR silver]" + I1III1111iIi [ I1iIIiiIIi1i ] + "[/COLOR]" , o0ooOooo000oOO , 181 , Ii1i1iI [ I1iIIiiIIi1i ] , Ii1i1iI [ I1iIIiiIIi1i ] , isFolder = True , IsPlayable = False )
     I1iIIiiIIi1i += 1
     o0OO0o0oOOO0O += 1
   I1iIIiiIIi1i = 0
   if o0OO0o0oOOO0O >= 50 :
    oo0OooOOo0 ( "[COLOR silver][B]Proxima Pagina >> [" + str ( int ( iII1ii1 ) + 2 ) + "[/B]][/COLOR]" , iII1ii1 , 110 , "https://i97.servimg.com/u/f97/19/82/45/70/proxim10.png" , isFolder = False , background = pagina2 )
 except :
  pass
def Ii1i1i1i1I1Ii ( ) :
 O00Oo000ooO0 = common . OpenURL ( oooOo0OOOoo0 )
 iI1Ii11iIiI1 = re . compile ( 'boxp\(.([^\']+)' ) . findall ( O00Oo000ooO0 )
 II = re . compile ( 'mCSB_container..\s(\h*(?s)(.+?))\<\/div' ) . findall ( O00Oo000ooO0 )
 II = II [ 0 ] [ 0 ] . replace ( "\t" , "" ) if II else ""
 if iI1Ii11iIiI1 :
  ii1 = common . OpenURL ( iI1Ii11iIiI1 [ 0 ] , headers = { 'referer' : "http://www.mmfilmes.tv/" } )
  oooO = re . compile ( 'opb\(.([^\']+).+?.{3}.+?[^\\>]+.([^\<]+)' ) . findall ( ii1 )
  if oooO :
   IIiII = re . sub ( ' \[.+' , '' , OOOiiiiI )
   for O00Oo000ooO0 , I1III1111iIi in oooO :
    oo0OooOOo0 ( IIiII + " [COLOR gold](" + I1III1111iIi + ")[/COLOR]" , O00Oo000ooO0 , 182 , OOoO , OOoO , isFolder = False , IsPlayable = True , info = II , background = oooOo0OOOoo0 )
def iiiI1 ( ) :
 O00Oo000ooO0 = common . OpenURL ( oooOo0OOOoo0 , headers = { 'referer' : "http://www.mmfilmes.tv/" } )
 iI1Ii11iIiI1 = re . compile ( 'addiframe\(\'([^\']+)' ) . findall ( O00Oo000ooO0 )
 if iI1Ii11iIiI1 :
  iI1Ii11iIiI1 [ 0 ] = "https://player.openload.network" + iI1Ii11iIiI1 [ 0 ] if not "http" in iI1Ii11iIiI1 [ 0 ] else iI1Ii11iIiI1 [ 0 ]
  ii1 = common . OpenURL ( iI1Ii11iIiI1 [ 0 ] , headers = { 'referer' : "https://player.openload.network" } ) . replace ( "file" , "\nfile" )
  oooO = re . compile ( 'file.+?(h[^\']+).+?(\d+p)\'' ) . findall ( ii1 )
  OOOoO0O = re . compile ( '([^\']+\.(vtt|srt|sub|ssa|txt|ass))' ) . findall ( ii1 )
  o0iiiI1I1iIIIi1 = [ ]
  II11IiIi11 = [ ]
  for O00Oo000ooO0 , III1ii1I in oooO :
   II11IiIi11 . append ( O00Oo000ooO0 )
   o0iiiI1I1iIIIi1 . append ( III1ii1I )
  if len ( II11IiIi11 ) < 1 :
   xbmcgui . Dialog ( ) . ok ( 'KelTec Play' , 'Erro, video não encontrado' )
   sys . exit ( int ( sys . argv [ 1 ] ) )
  I1i111I = xbmcgui . Dialog ( ) . select ( "Selecione a resolucão" , o0iiiI1I1iIIIi1 )
  if I1i111I != - 1 :
   o0ooOooo000oOO = re . sub ( ' ' , '%20' , II11IiIi11 [ I1i111I ] )
   global o0Oo0oO0oOO00
   o0Oo0oO0oOO00 = o0Oo0oO0oOO00 + ";;;" + OOOiiiiI + ";;;MM"
   if OOOoO0O :
    OOOoO0O = re . sub ( ' ' , '%20' , OOOoO0O [ 0 ] [ 0 ] )
    if not "http" in OOOoO0O :
     OOOoO0O = "https://player.openload.network/" + OOOoO0O
    iIiIi11 ( OOOiiiiI , o0ooOooo000oOO , OOoO , OO0O000 , sub = OOOoO0O )
   else :
    iIiIi11 ( OOOiiiiI , o0ooOooo000oOO , OOoO , OO0O000 )
    if 17 - 17: OO0O0O . iiiii / iiI1i1 % ooO0OO000o % ii1I / i11iIiiIii
def OOOIiiiii1iI ( ) :
 try :
  O00Oo000ooO0 = common . OpenURL ( "http://www.mmfilmes.tv/series/" )
  iI1Ii11iIiI1 = re . compile ( 'id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)' ) . findall ( O00Oo000ooO0 )
  Ii1i1iI = re . compile ( 'src=\"(http.+?www.mmfilmes.tv\/wp-content\/uploads[^\"]+)' ) . findall ( O00Oo000ooO0 )
  I1iIIiiIIi1i = 0
  oooO = [ ]
  if iI1Ii11iIiI1 :
   for IIiII , I1ii1ii11i1I , o0ooOooo000oOO in iI1Ii11iIiI1 :
    oooO . append ( [ IIiII , o0ooOooo000oOO , Ii1i1iI [ I1iIIiiIIi1i ] ] )
    I1iIIiiIIi1i += 1
   oooO = sorted ( oooO , key = lambda oooO : oooO [ 0 ] )
   for IIiII , o0ooOooo000oOO , IIi in oooO :
    IIiII = IIiII . replace ( "&#8211;" , "-" ) . replace ( "&#038;" , "&" ) . replace ( "&#8217;" , "\'" )
    oo0OooOOo0 ( IIiII , o0ooOooo000oOO , 191 , IIi , IIi , isFolder = True , IsPlayable = False )
 except :
  oo0OooOOo0 ( "Server offline" , "" , 0 , "" , "" , isFolder = False )
def ooOooo0 ( x ) :
 O00Oo000ooO0 = common . OpenURL ( oooOo0OOOoo0 )
 iI1Ii11iIiI1 = re . compile ( 'boxp\(.([^\']+)' ) . findall ( O00Oo000ooO0 )
 II = re . compile ( 'mCSB_container..\s(\h*(?s)(.+?))\<\/div' ) . findall ( O00Oo000ooO0 )
 II = II [ 0 ] [ 0 ] . replace ( "\t" , "" ) if II else ""
 I1iIIiiIIi1i = 0
 if iI1Ii11iIiI1 :
  if x == "None" :
   ii1 = common . OpenURL ( iI1Ii11iIiI1 [ 0 ] , headers = { 'referer' : "http://www.mmfilmes.tv/" } )
   oooO = re . compile ( 'opb\(.([^\']+).+?.{3}.+?[^\\>]+.([^\<]+)' ) . findall ( ii1 )
   o0iiiI1I1iIIIi1 = [ ]
   II11IiIi11 = [ ]
   for O00Oo000ooO0 , III1ii1I in oooO :
    II11IiIi11 . append ( O00Oo000ooO0 )
    o0iiiI1I1iIIIi1 . append ( III1ii1I )
   if len ( o0iiiI1I1iIIIi1 ) == 1 :
    I1i111I = 0
   else :
    I1i111I = xbmcgui . Dialog ( ) . select ( "Selecione o server:" , o0iiiI1I1iIIIi1 )
   if I1i111I == - 1 :
    I1i111I = 0
   if oooO :
    IIOOO0O00O0OOOO = common . OpenURL ( oooO [ 0 ] [ 0 ] , headers = { 'referer' : "http://www.mmfilmes.tv/" } ) . replace ( "\n" , "" ) . replace ( "\r" , "" ) . replace ( '".Svplayer"' , "<end>" ) . replace ( '\t' , " " )
    IIOOO0O00O0OOOO = re . sub ( '(\(s \=\= \d+\))' , r'<end>\1' , IIOOO0O00O0OOOO )
    i1I1i111Ii = re . compile ( 's \=\= (\d+)(.+?\<end\>)' ) . findall ( IIOOO0O00O0OOOO )
    for oO0OO0 in i1I1i111Ii :
     oo0OooOOo0 ( "[B]Temporada " + oO0OO0 [ 0 ] + "[/B]" , II11IiIi11 [ I1i111I ] , 192 , OOoO , OOoO , isFolder = True , info = II , background = I1iIIiiIIi1i )
     I1iIIiiIIi1i += 1
def o0O0Oo00 ( x ) :
 IIOOO0O00O0OOOO = common . OpenURL ( oooOo0OOOoo0 , headers = { 'referer' : "http://www.mmfilmes.tv/" } ) . replace ( "\n" , "" ) . replace ( "\r" , "" ) . replace ( '".Svplayer"' , "<end>" ) . replace ( '\t' , " " )
 IIOOO0O00O0OOOO = re . sub ( '(\(s \=\= \d+\))' , r'<end>\1' , IIOOO0O00O0OOOO )
 i1I1i111Ii = re . compile ( 's \=\= (\d+)(.+?\<end\>)' ) . findall ( IIOOO0O00O0OOOO )
 O0Oo0o000oO = - 1
 o0OO0o0oOOO0O = 1
 I1III1111iIi = re . compile ( "t \=\= \'([^\']+)(.+?\})" ) . findall ( i1I1i111Ii [ int ( x ) ] [ 1 ] )
 oOoO00o = re . compile ( "e \=\= (\d+).+?addiframe\(\'([^\']+)" ) . findall ( i1I1i111Ii [ int ( x ) ] [ 1 ] )
 for iI111i , o0ooOooo000oOO in oOoO00o :
  o0ooOooo000oOO = "https://player.openload.network" + o0ooOooo000oOO if not "http" in o0ooOooo000oOO else o0ooOooo000oOO
  if o0OO0o0oOOO0O == int ( iI111i ) :
   O0Oo0o000oO += 1
  if len ( I1III1111iIi [ O0O'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))